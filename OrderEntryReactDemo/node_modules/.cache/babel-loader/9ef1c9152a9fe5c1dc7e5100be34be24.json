{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naman.chopra\\\\Git-Repo\\\\eosiodemo\\\\OrderEntryReactDemo\\\\src\\\\components\\\\orderentry.jsx\";\n\n/*\n  Order Entry React Demo for EOSIO Training & Certification: AD101\n  \n  Several blocks have been commented out, as they will only\n  function as intended when the UAL (Universal Authenticator Library)\n  wrapper is implemented in App.js â€“ at which point props will\n  contain the ual object. Uncomment (or replace) these lines as\n  appropriate.\n*/\nimport * as React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './orderentry.css';\nimport { JsonRpc } from 'eosjs';\nimport Table from \"../table\";\nconst defaultState = {\n  activeUser: null,\n  //to store user object from UAL\n  accountName: '',\n  //to store account name of logged in wallet user\n  orderItems: '0'\n};\n\nclass OrderEntryApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeUser = null;\n    this.respData = null;\n\n    this.renderLogoutBtn = () => {\n      const {\n        ual: {\n          activeUser,\n          activeAuthenticator,\n          logout\n        }\n      } = this.props;\n\n      if (!!activeUser && !!activeAuthenticator) {\n        this.activeUser = null;\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"ual-btn-wrapper\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"outline-danger\",\n          onClick: logout,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }\n        }, 'Logout'));\n      }\n    };\n\n    this.handleOrderUpdate = event => {\n      this.setState({\n        orderItems: event.target.value\n      });\n    };\n\n    this.renderOrderForm = () => {\n      const {\n        orderItems\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          width: '25%',\n          marginTop: '40px',\n          marginBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: \"orderItems\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, \"Items to order (comma separated):\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"text\",\n        name: \"orderItems\",\n        value: orderItems,\n        onChange: this.handleOrderUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }))));\n    };\n\n    const ourNetwork = {\n      chainId: 'cf057bbfb72640471fd910bcb67639c22df9f92470936cddc1ade0e2f2e7dc4f',\n      rpcEndpoints: [{\n        protocol: 'http',\n        host: 'localhost',\n        port: 8888\n      }]\n    };\n    this.state = { ...defaultState,\n      rpc: new JsonRpc('http://localhost:8888')\n    };\n    this.updateAccountName = this.updateAccountName.bind(this);\n    this.renderOrderButton = this.renderOrderButton.bind(this);\n    this.placeorder = this.placeorder.bind(this);\n    this.renderModalButton = this.renderModalButton.bind(this);\n    this.handleOrderUpdate = this.handleOrderUpdate.bind(this);\n    this.renderOrderForm = this.renderOrderForm.bind(this);\n    this.loadReactTable = this.loadReactTable.bind(this);\n  } // implement code to transact, using the order details, here\n\n\n  async placeorder() {\n    const {\n      accountName,\n      activeUser,\n      orderItems\n    } = this.state;\n    console.log(\"With UAL implemented, this submits an order for items \" + orderItems);\n    const orderTransaction = {\n      actions: [{\n        account: 'eosiotraing',\n        name: 'addorder',\n        authorization: [{\n          actor: accountName,\n          permission: 'active'\n        }],\n        data: {\n          userid: this.userid + 1,\n          items: orderItems.split(\",\"),\n          status: 'Active'\n        }\n      }]\n    };\n\n    try {\n      await activeUser.signTransaction(orderTransaction, {\n        broadcast: true\n      });\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n\n  renderOrderButton() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ual-btn-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-warning\",\n      onClick: this.placeorder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, 'Place Order'));\n  } // once the UAL wrapper is implemented, the code below will function\n\n\n  componentDidUpdate() {\n    const {\n      ual: {\n        activeUser\n      }\n    } = this.props;\n\n    if (activeUser && !this.state.activeUser) {\n      this.setState({\n        activeUser\n      }, this.updateAccountName);\n    } else if (!activeUser && this.state.activeUser) {\n      this.setState(defaultState);\n    }\n  }\n\n  async updateAccountName() {\n    try {\n      const accountName = await this.state.activeUser.getAccountName();\n      this.setState({\n        accountName\n      }, this.updateAccountBalance);\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  renderModalButton() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"ual-btn-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.props.ual.showModal,\n      className: \"ual-generic-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Connect to Wallet\"));\n  }\n\n  loadReactTable() {}\n\n  render() {\n    let modalButton = this.renderModalButton();\n    let loggedIn = '';\n    let logoutBtn = null;\n    const orderBtn = this.renderOrderButton(); // Once UAL wrapper is implemented, uncomment below lines\n\n    const u = this.props.ual.activeUser;\n\n    if (u != undefined || u != null) {\n      this.activeUser = u.accountName;\n      loggedIn = u.accountName ? `Logged in as ${u.accountName}` : '';\n    }\n\n    const {\n      accountName\n    } = this.state.rpc.get_account('eosiotraing');\n    this.state.rpc.get_table_rows({\n      json: true,\n      code: 'eosiotraing',\n      scope: 'eosiotraing',\n      table: 'orders',\n      limit: 10,\n      reverse: true,\n      show_payer: false\n    }).then(resp => {\n      this.respData = resp.rows;\n      this.userid = resp.rows[0].userid;\n    });\n    modalButton = !this.activeUser && this.renderModalButton();\n    logoutBtn = this.renderLogoutBtn();\n    const data = this.respData;\n    console.log(this.respData);\n    const columns = [{\n      Header: \"Name\",\n      columns: [{\n        Header: \"First Name\",\n        accessor: \"firstName\"\n      }, {\n        Header: \"Last Name\",\n        accessor: \"lastName\"\n      }]\n    }, {\n      Header: \"Other Info\",\n      columns: [{\n        Header: \"Age\",\n        accessor: \"age\"\n      }]\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://bolttech-image.s3-ap-southeast-1.amazonaws.com/images/ph/phase2_welcome_banner.jpg\",\n      height: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        color: '#2EB5C7'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }, \"Bolttech Wallet App\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }), modalButton, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: '#ffc107'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, loggedIn), this.renderOrderForm(), orderBtn, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        paddingBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      columns: columns,\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    })), logoutBtn);\n  }\n\n}\n\nOrderEntryApp.displayName = 'OrderEntryApp';\nexport default OrderEntryApp;","map":{"version":3,"sources":["C:/Users/naman.chopra/Git-Repo/eosiodemo/OrderEntryReactDemo/src/components/orderentry.jsx"],"names":["React","Button","Form","JsonRpc","Table","defaultState","activeUser","accountName","orderItems","OrderEntryApp","Component","constructor","props","respData","renderLogoutBtn","ual","activeAuthenticator","logout","handleOrderUpdate","event","setState","target","value","renderOrderForm","state","marginLeft","marginRight","width","marginTop","marginBottom","ourNetwork","chainId","rpcEndpoints","protocol","host","port","rpc","updateAccountName","bind","renderOrderButton","placeorder","renderModalButton","loadReactTable","console","log","orderTransaction","actions","account","name","authorization","actor","permission","data","userid","items","split","status","signTransaction","broadcast","error","warn","componentDidUpdate","getAccountName","updateAccountBalance","e","showModal","render","modalButton","loggedIn","logoutBtn","orderBtn","u","undefined","get_account","get_table_rows","json","code","scope","table","limit","reverse","show_payer","then","resp","rows","columns","Header","accessor","textAlign","color","backgroundColor","paddingBottom","displayName"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,sCAAP;AACA,OAAO,kBAAP;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,IADO;AACD;AAClBC,EAAAA,WAAW,EAAE,EAFM;AAEF;AACjBC,EAAAA,UAAU,EAAE;AAHO,CAArB;;AAMA,MAAMC,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAA4C;AAM1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAHnBN,UAGmB,GAHR,IAGQ;AAAA,SAFnBO,QAEmB,GAFV,IAEU;;AAAA,SA2EnBC,eA3EmB,GA2ED,MAAM;AACtB,YAAM;AAAEC,QAAAA,GAAG,EAAE;AAAET,UAAAA,UAAF;AAAcU,UAAAA,mBAAd;AAAmCC,UAAAA;AAAnC;AAAP,UAAuD,KAAKL,KAAlE;;AACA,UAAI,CAAC,CAACN,UAAF,IAAgB,CAAC,CAACU,mBAAtB,EAA2C;AACzC,aAAKV,UAAL,GAAgB,IAAhB;AACA,4BACE;AAAG,UAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,gBAAhB;AAAiC,UAAA,OAAO,EAAEW,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,QADH,CADF,CADF;AAOD;AACF,KAvFkB;;AAAA,SAmGnBC,iBAnGmB,GAmGEC,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AAACZ,QAAAA,UAAU,EAAEW,KAAK,CAACE,MAAN,CAAaC;AAA1B,OAAd;AACD,KArGkB;;AAAA,SAuGnBC,eAvGmB,GAuGD,MAAM;AACtB,YAAM;AAAEf,QAAAA;AAAF,UAAiB,KAAKgB,KAA5B;AACA,0BACE;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAE,MAAb;AAAqBC,UAAAA,WAAW,EAAC,MAAjC;AAAyCC,UAAAA,KAAK,EAAC,KAA/C;AAAsDC,UAAAA,SAAS,EAAC,MAAhE;AAAwEC,UAAAA,YAAY,EAAC;AAArF,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACM,QAAA,IAAI,EAAC,MADX;AAEM,QAAA,IAAI,EAAC,YAFX;AAGM,QAAA,KAAK,EAAErB,UAHb;AAIM,QAAA,QAAQ,EAAE,KAAKU,iBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,CADF;AAeD,KAxHkB;;AAEjB,UAAMY,UAAU,GAAC;AACfC,MAAAA,OAAO,EAAC,kEADO;AAEfC,MAAAA,YAAY,EAAC,CAAC;AAACC,QAAAA,QAAQ,EAAC,MAAV;AAAiBC,QAAAA,IAAI,EAAC,WAAtB;AAAkCC,QAAAA,IAAI,EAAC;AAAvC,OAAD;AAFE,KAAjB;AAIA,SAAKX,KAAL,GAAa,EACX,GAAGnB,YADQ;AAEX+B,MAAAA,GAAG,EAAC,IAAIjC,OAAJ,CAAY,uBAAZ;AAFO,KAAb;AAIA,SAAKkC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKpB,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBoB,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKf,eAAL,GAAuB,KAAKA,eAAL,CAAqBe,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKI,cAAL,GAAsB,KAAKA,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAtB;AACD,GAvByC,CAyB1C;;;AACgB,QAAVE,UAAU,GAAG;AACjB,UAAM;AAAEjC,MAAAA,WAAF;AAAeD,MAAAA,UAAf;AAA2BE,MAAAA;AAA3B,QAA0C,KAAKgB,KAArD;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,2DAA2DpC,UAAvE;AACA,UAAMqC,gBAAgB,GAAC;AACrBC,MAAAA,OAAO,EAAC,CAAC;AACPC,QAAAA,OAAO,EAAC,aADD;AAEPC,QAAAA,IAAI,EAAC,UAFE;AAGPC,QAAAA,aAAa,EAAC,CAAC;AAACC,UAAAA,KAAK,EAAC3C,WAAP;AAAmB4C,UAAAA,UAAU,EAAC;AAA9B,SAAD,CAHP;AAIPC,QAAAA,IAAI,EAAC;AACHC,UAAAA,MAAM,EAAC,KAAKA,MAAL,GAAY,CADhB;AAEHC,UAAAA,KAAK,EAAC9C,UAAU,CAAC+C,KAAX,CAAiB,GAAjB,CAFH;AAGHC,UAAAA,MAAM,EAAC;AAHJ;AAJE,OAAD;AADa,KAAvB;;AAYA,QAAG;AACD,YAAMlD,UAAU,CAACmD,eAAX,CAA2BZ,gBAA3B,EAA4C;AAACa,QAAAA,SAAS,EAAC;AAAX,OAA5C,CAAN;AACD,KAFD,CAEC,OAAMC,KAAN,EAAY;AACXhB,MAAAA,OAAO,CAACiB,IAAR,CAAaD,KAAb;AACD;AACF;;AAGDpB,EAAAA,iBAAiB,GAAG;AAClB,wBACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,iBAAhB;AAAkC,MAAA,OAAO,EAAE,KAAKC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,aADH,CADF,CADF;AAOD,GAzDyC,CA4D1C;;;AAGAqB,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAAE9C,MAAAA,GAAG,EAAE;AAAET,QAAAA;AAAF;AAAP,QAA0B,KAAKM,KAArC;;AACA,QAAIN,UAAU,IAAI,CAAC,KAAKkB,KAAL,CAAWlB,UAA9B,EAA0C;AACxC,WAAKc,QAAL,CAAc;AAAEd,QAAAA;AAAF,OAAd,EAA8B,KAAK+B,iBAAnC;AACD,KAFD,MAEO,IAAI,CAAC/B,UAAD,IAAe,KAAKkB,KAAL,CAAWlB,UAA9B,EAA0C;AAC/C,WAAKc,QAAL,CAAcf,YAAd;AACD;AACF;;AAEsB,QAAjBgC,iBAAiB,GAAK;AAC1B,QAAI;AACF,YAAM9B,WAAW,GAAG,MAAM,KAAKiB,KAAL,CAAWlB,UAAX,CAAsBwD,cAAtB,EAA1B;AACA,WAAK1C,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd,EAA+B,KAAKwD,oBAApC;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACVrB,MAAAA,OAAO,CAACiB,IAAR,CAAaI,CAAb;AACD;AACF;;AAgBDvB,EAAAA,iBAAiB,GAAG;AAClB,wBACE;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,iBAAhB;AACE,MAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWG,GAAX,CAAekD,SAD1B;AAEE,MAAA,SAAS,EAAC,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAOD;;AAyBDvB,EAAAA,cAAc,GAAI,CAEjB;;AAEDwB,EAAAA,MAAM,GAAG;AACP,QAAIC,WAAW,GAAG,KAAK1B,iBAAL,EAAlB;AACA,QAAI2B,QAAQ,GAAG,EAAf;AACA,QAAIC,SAAS,GAAG,IAAhB;AACA,UAAMC,QAAQ,GAAG,KAAK/B,iBAAL,EAAjB,CAJO,CAKP;;AAEA,UAAMgC,CAAC,GAAC,KAAK3D,KAAL,CAAWG,GAAX,CAAeT,UAAvB;;AACA,QAAGiE,CAAC,IAAEC,SAAH,IAAgBD,CAAC,IAAE,IAAtB,EAA2B;AACxB,WAAKjE,UAAL,GAAmBiE,CAAC,CAAChE,WAArB;AACA6D,MAAAA,QAAQ,GAAGG,CAAC,CAAChE,WAAF,GAAiB,gBAAegE,CAAC,CAAChE,WAAY,EAA9C,GAAkD,EAA7D;AACF;;AAED,UAAM;AAAEA,MAAAA;AAAF,QAAkB,KAAKiB,KAAL,CAAWY,GAAX,CAAeqC,WAAf,CAA2B,aAA3B,CAAxB;AACA,SAAKjD,KAAL,CAAWY,GAAX,CAAesC,cAAf,CAA8B;AAC5BC,MAAAA,IAAI,EAAC,IADuB;AAE5BC,MAAAA,IAAI,EAAC,aAFuB;AAG5BC,MAAAA,KAAK,EAAC,aAHsB;AAI5BC,MAAAA,KAAK,EAAC,QAJsB;AAK5BC,MAAAA,KAAK,EAAC,EALsB;AAM5BC,MAAAA,OAAO,EAAC,IANoB;AAO5BC,MAAAA,UAAU,EAAC;AAPiB,KAA9B,EAQGC,IARH,CAQQC,IAAI,IAAE;AACZ,WAAKtE,QAAL,GAAcsE,IAAI,CAACC,IAAnB;AACA,WAAK/B,MAAL,GAAY8B,IAAI,CAACC,IAAL,CAAU,CAAV,EAAa/B,MAAzB;AACD,KAXD;AAaAc,IAAAA,WAAW,GAAG,CAAC,KAAK7D,UAAN,IAAoB,KAAKmC,iBAAL,EAAlC;AACA4B,IAAAA,SAAS,GAAG,KAAKvD,eAAL,EAAZ;AACA,UAAMsC,IAAI,GAAG,KAAKvC,QAAlB;AACA8B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK/B,QAAjB;AACA,UAAMwE,OAAO,GAAG,CACd;AACEC,MAAAA,MAAM,EAAE,MADV;AAEED,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,MAAM,EAAE,YADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OADO,EAKP;AACED,QAAAA,MAAM,EAAE,WADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OALO;AAFX,KADc,EAcd;AACED,MAAAA,MAAM,EAAE,YADV;AAEED,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OADO;AAFX,KAdc,CAAhB;AAyBA,wBACE;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAC,4FAAT;AAAsG,MAAA,MAAM,EAAC,KAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,eAGE;AAAK,MAAA,KAAK,EAAE;AAAC5D,QAAAA,YAAY,EAAE;AAAf,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIGsC,WAJH,eAKE;AAAI,MAAA,KAAK,EAAE;AAACsB,QAAAA,KAAK,EAAC;AAAP,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BrB,QAA/B,CALF,EAMG,KAAK7C,eAAL,EANH,EAOG+C,QAPH,eAQE;AAAK,MAAA,KAAK,EAAE;AAACoB,QAAAA,eAAe,EAAC,OAAjB;AAAyBC,QAAAA,aAAa,EAAC;AAAvC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEN,OAAhB;AAAyB,MAAA,IAAI,EAAEjC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CARF,EAWGiB,SAXH,CADF;AAeD;;AA3MyC;;AAAtC5D,a,CACGmF,W,GAAc,e;AA6MvB,eAAenF,aAAf","sourcesContent":["/*\n  Order Entry React Demo for EOSIO Training & Certification: AD101\n  \n  Several blocks have been commented out, as they will only\n  function as intended when the UAL (Universal Authenticator Library)\n  wrapper is implemented in App.js â€“ at which point props will\n  contain the ual object. Uncomment (or replace) these lines as\n  appropriate.\n*/\n\nimport * as React from 'react'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './orderentry.css';\nimport { JsonRpc } from 'eosjs';\nimport Table from \"../table\"\n\nconst defaultState = {\n  activeUser: null, //to store user object from UAL\n  accountName: '', //to store account name of logged in wallet user\n  orderItems: '0'\n}\n\nclass OrderEntryApp extends React.Component {\n  static displayName = 'OrderEntryApp';\n  userid;\n  activeUser=null;\n  respData=null;\n\n  constructor(props) {\n    super(props)\n    const ourNetwork={\n      chainId:'cf057bbfb72640471fd910bcb67639c22df9f92470936cddc1ade0e2f2e7dc4f',\n      rpcEndpoints:[{protocol:'http',host:'localhost',port:8888}]\n    };\n    this.state = {\n      ...defaultState,\n      rpc:new JsonRpc('http://localhost:8888')\n    }\n    this.updateAccountName = this.updateAccountName.bind(this)\n    this.renderOrderButton = this.renderOrderButton.bind(this)\n    this.placeorder = this.placeorder.bind(this)\n    this.renderModalButton = this.renderModalButton.bind(this)\n    this.handleOrderUpdate = this.handleOrderUpdate.bind(this)\n    this.renderOrderForm = this.renderOrderForm.bind(this)\n    this.loadReactTable = this.loadReactTable.bind(this)\n  }\n\n  // implement code to transact, using the order details, here\n  async placeorder() {\n    const { accountName, activeUser, orderItems } = this.state\n    console.log(\"With UAL implemented, this submits an order for items \" + orderItems);\n    const orderTransaction={\n      actions:[{\n        account:'eosiotraing',\n        name:'addorder',\n        authorization:[{actor:accountName,permission:'active'}],\n        data:{\n          userid:this.userid+1,\n          items:orderItems.split(\",\"),\n          status:'Active'\n        }\n      }]\n    }\n    try{\n      await activeUser.signTransaction(orderTransaction,{broadcast:true});\n    }catch(error){\n      console.warn(error);\n    }\n  }\n\n\n  renderOrderButton() {\n    return (\n      <p className='ual-btn-wrapper'>\n        <Button variant=\"outline-warning\" onClick={this.placeorder}>\n          {'Place Order'}\n        </Button>\n      </p>\n    )\n  }\n\n\n  // once the UAL wrapper is implemented, the code below will function\n  \n  \n  componentDidUpdate() {\n    const { ual: { activeUser } } = this.props\n    if (activeUser && !this.state.activeUser) {\n      this.setState({ activeUser }, this.updateAccountName)\n    } else if (!activeUser && this.state.activeUser) {\n      this.setState(defaultState)\n    }\n  }\n  \n  async updateAccountName()   {\n    try {\n      const accountName = await this.state.activeUser.getAccountName()\n      this.setState({ accountName }, this.updateAccountBalance)\n    } catch (e) {\n      console.warn(e)\n    }\n  }\n\n  renderLogoutBtn = () => {\n    const { ual: { activeUser, activeAuthenticator, logout } } = this.props\n    if (!!activeUser && !!activeAuthenticator) {\n      this.activeUser=null;\n      return (\n        <p className='ual-btn-wrapper'>\n          <Button variant='outline-danger' onClick={logout}>\n            {'Logout'}\n          </Button>\n        </p>\n      )\n    }\n  }\n\n  renderModalButton() {\n    return (\n      <p className='ual-btn-wrapper'>\n        <Button variant='outline-primary'\n          onClick={this.props.ual.showModal}\n          className='ual-generic-button'>Connect to Wallet</Button>\n      </p>\n    )\n  }\n\n  handleOrderUpdate = (event) => {\n    this.setState({orderItems: event.target.value});\n  }\n\n  renderOrderForm = () => {\n    const { orderItems } = this.state\n    return(\n      <div style={{marginLeft: 'auto', marginRight:'auto', width:'25%', marginTop:'40px', marginBottom:'10px'}}>\n        <Form>\n          <Form.Group controlId=\"orderItems\">\n            <Form.Label>Items to order (comma separated):</Form.Label>\n            <Form.Control\n                  type=\"text\"\n                  name=\"orderItems\"\n                  value={orderItems}\n                  onChange={this.handleOrderUpdate}\n                />\n          </Form.Group>\n        </Form>\n      </div>\n    )\n  }\n\n  loadReactTable () {\n      \n  }\n\n  render() {\n    let modalButton = this.renderModalButton()\n    let loggedIn = ''\n    let logoutBtn = null\n    const orderBtn = this.renderOrderButton()\n    // Once UAL wrapper is implemented, uncomment below lines\n    \n    const u=this.props.ual.activeUser;\n    if(u!=undefined || u!=null){\n       this.activeUser  = u.accountName;\n       loggedIn = u.accountName ? `Logged in as ${u.accountName}` : ''\n    }\n    \n    const { accountName } = this.state.rpc.get_account('eosiotraing');\n    this.state.rpc.get_table_rows({\n      json:true,\n      code:'eosiotraing',\n      scope:'eosiotraing',\n      table:'orders',\n      limit:10,\n      reverse:true,\n      show_payer:false\n    }).then(resp=>{\n      this.respData=resp.rows;\n      this.userid=resp.rows[0].userid;\n    });\n\n    modalButton = !this.activeUser && this.renderModalButton()\n    logoutBtn = this.renderLogoutBtn()\n    const data = this.respData;\n    console.log(this.respData);\n    const columns = [\n      {\n        Header: \"Name\",\n        columns: [\n          {\n            Header: \"First Name\",\n            accessor: \"firstName\"\n          },\n          {\n            Header: \"Last Name\",\n            accessor: \"lastName\"\n          }\n        ]\n      },\n      {\n        Header: \"Other Info\",\n        columns: [\n          {\n            Header: \"Age\",\n            accessor: \"age\"\n          }\n        ]\n      }\n    ];\n    \n    return (\n      <div  style={{ textAlign: 'center'}}>\n        <img src=\"https://bolttech-image.s3-ap-southeast-1.amazonaws.com/images/ph/phase2_welcome_banner.jpg\" height=\"200\"/>\n        <h2 style={{color:'#2EB5C7'}}>Bolttech Wallet App</h2>\n        <div style={{marginBottom: '20px'}}></div>\n        {modalButton}\n        <h3 style={{color:'#ffc107'}}>{loggedIn}</h3>\n        {this.renderOrderForm()}\n        {orderBtn}\n        <div style={{backgroundColor:'white',paddingBottom:'10px'}}>\n        <Table columns={columns} data={data} />\n        </div>\n        {logoutBtn}\n      </div>\n    )\n  }\n}\n\nexport default OrderEntryApp;"]},"metadata":{},"sourceType":"module"}