{"ast":null,"code":"'use strict';\n\nvar intSize = 4;\nvar zeroBuffer = new Buffer(intSize);\nzeroBuffer.fill(0);\nvar charSize = 8;\nvar hashSize = 16;\n\nfunction toArray(buf) {\n  if (buf.length % intSize !== 0) {\n    var len = buf.length + (intSize - buf.length % intSize);\n    buf = Buffer.concat([buf, zeroBuffer], len);\n  }\n\n  var arr = new Array(buf.length >>> 2);\n\n  for (var i = 0, j = 0; i < buf.length; i += intSize, j++) {\n    arr[j] = buf.readInt32LE(i);\n  }\n\n  return arr;\n}\n\nmodule.exports = function hash(buf, fn) {\n  var arr = fn(toArray(buf), buf.length * charSize);\n  buf = new Buffer(hashSize);\n\n  for (var i = 0; i < arr.length; i++) {\n    buf.writeInt32LE(arr[i], i << 2, true);\n  }\n\n  return buf;\n};","map":{"version":3,"sources":["C:/Users/naman.chopra/Git-Repo/eosiodemo/OrderEntryReactDemo/node_modules/eosjs-ecc/node_modules/create-hash/make-hash.js"],"names":["intSize","zeroBuffer","Buffer","fill","charSize","hashSize","toArray","buf","length","len","concat","arr","Array","i","j","readInt32LE","module","exports","hash","fn","writeInt32LE"],"mappings":"AAAA;;AACA,IAAIA,OAAO,GAAG,CAAd;AACA,IAAIC,UAAU,GAAG,IAAIC,MAAJ,CAAWF,OAAX,CAAjB;AACAC,UAAU,CAACE,IAAX,CAAgB,CAAhB;AAEA,IAAIC,QAAQ,GAAG,CAAf;AACA,IAAIC,QAAQ,GAAG,EAAf;;AAEA,SAASC,OAAT,CAAkBC,GAAlB,EAAuB;AACrB,MAAKA,GAAG,CAACC,MAAJ,GAAaR,OAAd,KAA2B,CAA/B,EAAkC;AAChC,QAAIS,GAAG,GAAGF,GAAG,CAACC,MAAJ,IAAcR,OAAO,GAAIO,GAAG,CAACC,MAAJ,GAAaR,OAAtC,CAAV;AACAO,IAAAA,GAAG,GAAGL,MAAM,CAACQ,MAAP,CAAc,CAACH,GAAD,EAAMN,UAAN,CAAd,EAAiCQ,GAAjC,CAAN;AACD;;AAED,MAAIE,GAAG,GAAG,IAAIC,KAAJ,CAAUL,GAAG,CAACC,MAAJ,KAAe,CAAzB,CAAV;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG,CAApB,EAAuBD,CAAC,GAAGN,GAAG,CAACC,MAA/B,EAAuCK,CAAC,IAAIb,OAAL,EAAcc,CAAC,EAAtD,EAA0D;AACxDH,IAAAA,GAAG,CAACG,CAAD,CAAH,GAASP,GAAG,CAACQ,WAAJ,CAAgBF,CAAhB,CAAT;AACD;;AAED,SAAOF,GAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAeX,GAAf,EAAoBY,EAApB,EAAwB;AACvC,MAAIR,GAAG,GAAGQ,EAAE,CAACb,OAAO,CAACC,GAAD,CAAR,EAAeA,GAAG,CAACC,MAAJ,GAAaJ,QAA5B,CAAZ;AACAG,EAAAA,GAAG,GAAG,IAAIL,MAAJ,CAAWG,QAAX,CAAN;;AACA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACH,MAAxB,EAAgCK,CAAC,EAAjC,EAAqC;AACnCN,IAAAA,GAAG,CAACa,YAAJ,CAAiBT,GAAG,CAACE,CAAD,CAApB,EAAyBA,CAAC,IAAI,CAA9B,EAAiC,IAAjC;AACD;;AACD,SAAON,GAAP;AACD,CAPD","sourcesContent":["'use strict'\nvar intSize = 4\nvar zeroBuffer = new Buffer(intSize)\nzeroBuffer.fill(0)\n\nvar charSize = 8\nvar hashSize = 16\n\nfunction toArray (buf) {\n  if ((buf.length % intSize) !== 0) {\n    var len = buf.length + (intSize - (buf.length % intSize))\n    buf = Buffer.concat([buf, zeroBuffer], len)\n  }\n\n  var arr = new Array(buf.length >>> 2)\n  for (var i = 0, j = 0; i < buf.length; i += intSize, j++) {\n    arr[j] = buf.readInt32LE(i)\n  }\n\n  return arr\n}\n\nmodule.exports = function hash (buf, fn) {\n  var arr = fn(toArray(buf), buf.length * charSize)\n  buf = new Buffer(hashSize)\n  for (var i = 0; i < arr.length; i++) {\n    buf.writeInt32LE(arr[i], i << 2, true)\n  }\n  return buf\n}\n"]},"metadata":{},"sourceType":"script"}