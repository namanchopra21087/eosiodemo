{"ast":null,"code":"\"use strict\";\n\nvar assert = require('assert'); // from https://github.com/bitcoinjs/bitcoinjs-lib\n\n\nvar enforceType = require('./enforce_types');\n\nvar BigInteger = require('bigi');\n\nfunction ECSignature(r, s) {\n  enforceType(BigInteger, r);\n  enforceType(BigInteger, s);\n\n  function toCompact(i, compressed) {\n    if (compressed) i += 4;\n    i += 27;\n    var buffer = new Buffer(65);\n    buffer.writeUInt8(i, 0);\n    r.toBuffer(32).copy(buffer, 1);\n    s.toBuffer(32).copy(buffer, 33);\n    return buffer;\n  }\n\n  function toDER() {\n    var rBa = r.toDERInteger();\n    var sBa = s.toDERInteger();\n    var sequence = []; // INTEGER\n\n    sequence.push(0x02, rBa.length);\n    sequence = sequence.concat(rBa); // INTEGER\n\n    sequence.push(0x02, sBa.length);\n    sequence = sequence.concat(sBa); // SEQUENCE\n\n    sequence.unshift(0x30, sequence.length);\n    return new Buffer(sequence);\n  }\n\n  function toScriptSignature(hashType) {\n    var hashTypeBuffer = new Buffer(1);\n    hashTypeBuffer.writeUInt8(hashType, 0);\n    return Buffer.concat([toDER(), hashTypeBuffer]);\n  }\n\n  return {\n    r: r,\n    s: s,\n    toCompact: toCompact,\n    toDER: toDER,\n    toScriptSignature: toScriptSignature\n  };\n} // Import operations\n\n\nECSignature.parseCompact = function (buffer) {\n  assert.equal(buffer.length, 65, 'Invalid signature length');\n  var i = buffer.readUInt8(0) - 27; // At most 3 bits\n\n  assert.equal(i, i & 7, 'Invalid signature parameter');\n  var compressed = !!(i & 4); // Recovery param only\n\n  i = i & 3;\n  var r = BigInteger.fromBuffer(buffer.slice(1, 33));\n  var s = BigInteger.fromBuffer(buffer.slice(33));\n  return {\n    compressed: compressed,\n    i: i,\n    signature: ECSignature(r, s)\n  };\n};\n\nECSignature.fromDER = function (buffer) {\n  assert.equal(buffer.readUInt8(0), 0x30, 'Not a DER sequence');\n  assert.equal(buffer.readUInt8(1), buffer.length - 2, 'Invalid sequence length');\n  assert.equal(buffer.readUInt8(2), 0x02, 'Expected a DER integer');\n  var rLen = buffer.readUInt8(3);\n  assert(rLen > 0, 'R length is zero');\n  var offset = 4 + rLen;\n  assert.equal(buffer.readUInt8(offset), 0x02, 'Expected a DER integer (2)');\n  var sLen = buffer.readUInt8(offset + 1);\n  assert(sLen > 0, 'S length is zero');\n  var rB = buffer.slice(4, offset);\n  var sB = buffer.slice(offset + 2);\n  offset += 2 + sLen;\n\n  if (rLen > 1 && rB.readUInt8(0) === 0x00) {\n    assert(rB.readUInt8(1) & 0x80, 'R value excessively padded');\n  }\n\n  if (sLen > 1 && sB.readUInt8(0) === 0x00) {\n    assert(sB.readUInt8(1) & 0x80, 'S value excessively padded');\n  }\n\n  assert.equal(offset, buffer.length, 'Invalid DER encoding');\n  var r = BigInteger.fromDERInteger(rB);\n  var s = BigInteger.fromDERInteger(sB);\n  assert(r.signum() >= 0, 'R value is negative');\n  assert(s.signum() >= 0, 'S value is negative');\n  return ECSignature(r, s);\n}; // FIXME: 0x00, 0x04, 0x80 are SIGHASH_* boundary constants, importing Transaction causes a circular dependency\n\n\nECSignature.parseScriptSignature = function (buffer) {\n  var hashType = buffer.readUInt8(buffer.length - 1);\n  var hashTypeMod = hashType & ~0x80;\n  assert(hashTypeMod > 0x00 && hashTypeMod < 0x04, 'Invalid hashType');\n  return {\n    signature: ECSignature.fromDER(buffer.slice(0, -1)),\n    hashType: hashType\n  };\n};\n\nmodule.exports = ECSignature;","map":{"version":3,"sources":["C:/Users/naman.chopra/Git-Repo/eosiodemo/OrderEntryReactDemo/node_modules/eosjs-ecc/lib/ecsignature.js"],"names":["assert","require","enforceType","BigInteger","ECSignature","r","s","toCompact","i","compressed","buffer","Buffer","writeUInt8","toBuffer","copy","toDER","rBa","toDERInteger","sBa","sequence","push","length","concat","unshift","toScriptSignature","hashType","hashTypeBuffer","parseCompact","equal","readUInt8","fromBuffer","slice","signature","fromDER","rLen","offset","sLen","rB","sB","fromDERInteger","signum","parseScriptSignature","hashTypeMod","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar assert = require('assert'); // from https://github.com/bitcoinjs/bitcoinjs-lib\n\n\nvar enforceType = require('./enforce_types');\n\nvar BigInteger = require('bigi');\n\nfunction ECSignature(r, s) {\n  enforceType(BigInteger, r);\n  enforceType(BigInteger, s);\n\n  function toCompact(i, compressed) {\n    if (compressed) i += 4;\n    i += 27;\n    var buffer = new Buffer(65);\n    buffer.writeUInt8(i, 0);\n    r.toBuffer(32).copy(buffer, 1);\n    s.toBuffer(32).copy(buffer, 33);\n    return buffer;\n  }\n\n  function toDER() {\n    var rBa = r.toDERInteger();\n    var sBa = s.toDERInteger();\n    var sequence = []; // INTEGER\n\n    sequence.push(0x02, rBa.length);\n    sequence = sequence.concat(rBa); // INTEGER\n\n    sequence.push(0x02, sBa.length);\n    sequence = sequence.concat(sBa); // SEQUENCE\n\n    sequence.unshift(0x30, sequence.length);\n    return new Buffer(sequence);\n  }\n\n  function toScriptSignature(hashType) {\n    var hashTypeBuffer = new Buffer(1);\n    hashTypeBuffer.writeUInt8(hashType, 0);\n    return Buffer.concat([toDER(), hashTypeBuffer]);\n  }\n\n  return {\n    r: r,\n    s: s,\n    toCompact: toCompact,\n    toDER: toDER,\n    toScriptSignature: toScriptSignature\n  };\n} // Import operations\n\n\nECSignature.parseCompact = function (buffer) {\n  assert.equal(buffer.length, 65, 'Invalid signature length');\n  var i = buffer.readUInt8(0) - 27; // At most 3 bits\n\n  assert.equal(i, i & 7, 'Invalid signature parameter');\n  var compressed = !!(i & 4); // Recovery param only\n\n  i = i & 3;\n  var r = BigInteger.fromBuffer(buffer.slice(1, 33));\n  var s = BigInteger.fromBuffer(buffer.slice(33));\n  return {\n    compressed: compressed,\n    i: i,\n    signature: ECSignature(r, s)\n  };\n};\n\nECSignature.fromDER = function (buffer) {\n  assert.equal(buffer.readUInt8(0), 0x30, 'Not a DER sequence');\n  assert.equal(buffer.readUInt8(1), buffer.length - 2, 'Invalid sequence length');\n  assert.equal(buffer.readUInt8(2), 0x02, 'Expected a DER integer');\n  var rLen = buffer.readUInt8(3);\n  assert(rLen > 0, 'R length is zero');\n  var offset = 4 + rLen;\n  assert.equal(buffer.readUInt8(offset), 0x02, 'Expected a DER integer (2)');\n  var sLen = buffer.readUInt8(offset + 1);\n  assert(sLen > 0, 'S length is zero');\n  var rB = buffer.slice(4, offset);\n  var sB = buffer.slice(offset + 2);\n  offset += 2 + sLen;\n\n  if (rLen > 1 && rB.readUInt8(0) === 0x00) {\n    assert(rB.readUInt8(1) & 0x80, 'R value excessively padded');\n  }\n\n  if (sLen > 1 && sB.readUInt8(0) === 0x00) {\n    assert(sB.readUInt8(1) & 0x80, 'S value excessively padded');\n  }\n\n  assert.equal(offset, buffer.length, 'Invalid DER encoding');\n  var r = BigInteger.fromDERInteger(rB);\n  var s = BigInteger.fromDERInteger(sB);\n  assert(r.signum() >= 0, 'R value is negative');\n  assert(s.signum() >= 0, 'S value is negative');\n  return ECSignature(r, s);\n}; // FIXME: 0x00, 0x04, 0x80 are SIGHASH_* boundary constants, importing Transaction causes a circular dependency\n\n\nECSignature.parseScriptSignature = function (buffer) {\n  var hashType = buffer.readUInt8(buffer.length - 1);\n  var hashTypeMod = hashType & ~0x80;\n  assert(hashTypeMod > 0x00 && hashTypeMod < 0x04, 'Invalid hashType');\n  return {\n    signature: ECSignature.fromDER(buffer.slice(0, -1)),\n    hashType: hashType\n  };\n};\n\nmodule.exports = ECSignature;"]},"metadata":{},"sourceType":"script"}