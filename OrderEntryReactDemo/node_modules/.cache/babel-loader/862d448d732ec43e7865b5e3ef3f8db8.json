{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:\\\\Users\\\\naman.chopra\\\\Git-Repo\\\\eosiodemo\\\\OrderEntryReactDemo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\");\n\nvar _slicedToArray = require(\"C:\\\\Users\\\\naman.chopra\\\\Git-Repo\\\\eosiodemo\\\\OrderEntryReactDemo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\naman.chopra\\\\Git-Repo\\\\eosiodemo\\\\OrderEntryReactDemo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\naman.chopra\\\\Git-Repo\\\\eosiodemo\\\\OrderEntryReactDemo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:\\\\Users\\\\naman.chopra\\\\Git-Repo\\\\eosiodemo\\\\OrderEntryReactDemo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:\\\\Users\\\\naman.chopra\\\\Git-Repo\\\\eosiodemo\\\\OrderEntryReactDemo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar universal_authenticator_library_1 = require(\"universal-authenticator-library\");\n\nvar anchor_link_1 = __importDefault(require(\"anchor-link\"));\n\nvar eosjs_1 = require(\"eosjs\");\n\nvar interfaces_1 = require(\"./interfaces\");\n\nvar AnchorUser_1 = require(\"./AnchorUser\");\n\nvar AnchorLogo_1 = require(\"./AnchorLogo\");\n\nvar UALAnchorError_1 = require(\"./UALAnchorError\");\n\nvar anchor_link_browser_transport_1 = __importDefault(require(\"anchor-link-browser-transport\"));\n\nvar Anchor = /*#__PURE__*/function (_universal_authentica) {\n  _inherits(Anchor, _universal_authentica);\n\n  var _super = _createSuper(Anchor);\n\n  /**\n   * Anchor Constructor.\n   *\n   * @param chains\n   * @param options { appName } appName is a required option to use Scatter\n   */\n  function Anchor(chains, options) {\n    var _this;\n\n    _classCallCheck(this, Anchor);\n\n    _this = _super.call(this, chains); // Storage for AnchorUser instances\n\n    _this.users = []; // the callback service url, defaults to https://cb.anchor.link\n\n    _this.service = 'https://cb.anchor.link'; // disable Greymass Fuel cosigning, defaults to false\n\n    _this.disableGreymassFuel = false; // display the request status returned by anchor-link, defaults to false (ual has it's own)\n\n    _this.requestStatus = false; // Establish initial values\n\n    _this.chainId = chains[0].chainId;\n    _this.users = []; // Determine the default rpc endpoint for this chain\n\n    var _chains = _slicedToArray(chains, 1),\n        chain = _chains[0];\n\n    var _chain$rpcEndpoints = _slicedToArray(chain.rpcEndpoints, 1),\n        rpc = _chain$rpcEndpoints[0]; // Ensure the appName is set properly\n\n\n    if (options && options.appName) {\n      _this.appName = options.appName;\n    } else {\n      throw new UALAnchorError_1.UALAnchorError('ual-anchor requires the appName property to be set on the `options` argument during initialization.', universal_authenticator_library_1.UALErrorType.Initialization, null);\n    } // Allow overriding the JsonRpc client via options\n\n\n    if (options && options.rpc) {\n      _this.rpc = options.rpc;\n    } else {\n      // otherwise just return a generic rpc instance for this endpoint\n      _this.rpc = new eosjs_1.JsonRpc(\"\".concat(rpc.protocol, \"://\").concat(rpc.host, \":\").concat(rpc.port));\n    } // Allow passing a custom service URL to process callbacks\n\n\n    if (options.service) {\n      _this.service = options.service;\n    } // Allow passing of disable flag for Greymass Fuel\n\n\n    if (options && options.disableGreymassFuel) {\n      _this.disableGreymassFuel = options.disableGreymassFuel;\n    } // Allow passing of disable flag for resulting request status\n\n\n    if (options && options.requestStatus) {\n      _this.requestStatus = options.requestStatus;\n    }\n\n    return _this;\n  }\n  /**\n   * Called after `shouldRender` and should be used to handle any async actions required to initialize the authenticator\n   */\n\n\n  _createClass(Anchor, [{\n    key: \"init\",\n    value: function init() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var session;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // establish anchor-link\n                this.link = new anchor_link_1.default({\n                  chainId: this.chainId,\n                  rpc: this.rpc,\n                  service: this.service,\n                  transport: new anchor_link_browser_transport_1.default({\n                    // default: disable browser transport UI status messages, ual has its own\n                    requestStatus: this.requestStatus,\n                    // default: do not disable fuel by default\n                    disableGreymassFuel: this.disableGreymassFuel\n                  })\n                }); // attempt to restore any existing session for this app\n\n                _context.next = 3;\n                return this.link.restoreSession(this.appName);\n\n              case 3:\n                session = _context.sent;\n\n                if (session) {\n                  this.users = [new AnchorUser_1.AnchorUser(this.rpc, {\n                    session: session\n                  })];\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n    /**\n     * Resets the authenticator to its initial, default state then calls `init` method\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.users = [];\n    }\n    /**\n     * Returns true if the authenticator has errored while initializing.\n     */\n\n  }, {\n    key: \"isErrored\",\n    value: function isErrored() {\n      return false;\n    }\n    /**\n     * Returns a URL where the user can download and install the underlying authenticator\n     * if it is not found by the UAL Authenticator.\n     */\n\n  }, {\n    key: \"getOnboardingLink\",\n    value: function getOnboardingLink() {\n      return 'https://github.com/greymass/anchor/';\n    }\n    /**\n     * Returns error (if available) if the authenticator has errored while initializing.\n     */\n\n  }, {\n    key: \"getError\",\n    value: function getError() {\n      return null;\n    }\n    /**\n     * Returns true if the authenticator is loading while initializing its internal state.\n     */\n\n  }, {\n    key: \"isLoading\",\n    value: function isLoading() {\n      return false;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return 'anchor';\n    }\n    /**\n     * Returns the style of the Button that will be rendered.\n     */\n\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      return {\n        icon: AnchorLogo_1.AnchorLogo,\n        text: interfaces_1.Name,\n        textColor: 'white',\n        background: '#3650A2'\n      };\n    }\n    /**\n     * Returns whether or not the button should render based on the operating environment and other factors.\n     * ie. If your Authenticator App does not support mobile, it returns false when running in a mobile browser.\n     */\n\n  }, {\n    key: \"shouldRender\",\n    value: function shouldRender() {\n      return !this.isLoading();\n    }\n    /**\n     * Returns whether or not the dapp should attempt to auto login with the Authenticator app.\n     * Auto login will only occur when there is only one Authenticator that returns shouldRender() true and\n     * shouldAutoLogin() true.\n     */\n\n  }, {\n    key: \"shouldAutoLogin\",\n    value: function shouldAutoLogin() {\n      return this.users.length > 0;\n    }\n    /**\n     * Returns whether or not the button should show an account name input field.\n     * This is for Authenticators that do not have a concept of account names.\n     */\n\n  }, {\n    key: \"shouldRequestAccountName\",\n    value: function shouldRequestAccountName() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", false);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    }\n    /**\n     * Login using the Authenticator App. This can return one or more users depending on multiple chain support.\n     *\n     * @param accountName  The account name of the user for Authenticators that do not store accounts (optional)\n     */\n\n  }, {\n    key: \"login\",\n    value: function login() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var identity;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.chains.length > 1)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw new UALAnchorError_1.UALAnchorError('UAL-Anchor does not yet support providing multiple chains to UAL. Please initialize the UAL provider with a single chain.', universal_authenticator_library_1.UALErrorType.Unsupported, null);\n\n              case 2:\n                _context3.prev = 2;\n\n                if (!(this.users.length === 0)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                _context3.next = 6;\n                return this.link.login(this.appName);\n\n              case 6:\n                identity = _context3.sent;\n                this.users = [new AnchorUser_1.AnchorUser(this.rpc, identity)];\n\n              case 8:\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](2);\n                throw new UALAnchorError_1.UALAnchorError(_context3.t0.message, universal_authenticator_library_1.UALErrorType.Login, _context3.t0);\n\n              case 13:\n                return _context3.abrupt(\"return\", this.users);\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 10]]);\n      }));\n    }\n    /**\n     * Logs the user out of the dapp. This will be strongly dependent on each Authenticator app's patterns.\n     */\n\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this$users, user, auth;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                // retrieve the current user\n                _this$users = _slicedToArray(this.users, 1), user = _this$users[0]; // retrieve the auth from the current user\n\n                auth = user.session.auth; // remove the session from anchor-link\n\n                _context4.next = 4;\n                return this.link.removeSession(this.appName, auth);\n\n              case 4:\n                // reset the authenticator\n                this.reset();\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n    /**\n     * Returns true if user confirmation is required for `getKeys`\n     */\n\n  }, {\n    key: \"requiresGetKeyConfirmation\",\n    value: function requiresGetKeyConfirmation() {\n      return false;\n    }\n  }]);\n\n  return Anchor;\n}(universal_authenticator_library_1.Authenticator);\n\nexports.Anchor = Anchor;","map":{"version":3,"sources":["C:/Users/naman.chopra/Git-Repo/eosiodemo/OrderEntryReactDemo/node_modules/ual-anchor/dist/Anchor.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","universal_authenticator_library_1","require","anchor_link_1","eosjs_1","interfaces_1","AnchorUser_1","AnchorLogo_1","UALAnchorError_1","anchor_link_browser_transport_1","Anchor","chains","options","users","service","disableGreymassFuel","requestStatus","chainId","chain","rpcEndpoints","rpc","appName","UALAnchorError","UALErrorType","Initialization","JsonRpc","protocol","host","port","link","default","transport","restoreSession","session","AnchorUser","icon","AnchorLogo","text","Name","textColor","background","isLoading","length","Unsupported","login","identity","message","Login","user","auth","removeSession","reset","Authenticator"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst universal_authenticator_library_1 = require(\"universal-authenticator-library\");\nconst anchor_link_1 = __importDefault(require(\"anchor-link\"));\nconst eosjs_1 = require(\"eosjs\");\nconst interfaces_1 = require(\"./interfaces\");\nconst AnchorUser_1 = require(\"./AnchorUser\");\nconst AnchorLogo_1 = require(\"./AnchorLogo\");\nconst UALAnchorError_1 = require(\"./UALAnchorError\");\nconst anchor_link_browser_transport_1 = __importDefault(require(\"anchor-link-browser-transport\"));\nclass Anchor extends universal_authenticator_library_1.Authenticator {\n    /**\n     * Anchor Constructor.\n     *\n     * @param chains\n     * @param options { appName } appName is a required option to use Scatter\n     */\n    constructor(chains, options) {\n        super(chains);\n        // Storage for AnchorUser instances\n        this.users = [];\n        // the callback service url, defaults to https://cb.anchor.link\n        this.service = 'https://cb.anchor.link';\n        // disable Greymass Fuel cosigning, defaults to false\n        this.disableGreymassFuel = false;\n        // display the request status returned by anchor-link, defaults to false (ual has it's own)\n        this.requestStatus = false;\n        // Establish initial values\n        this.chainId = chains[0].chainId;\n        this.users = [];\n        // Determine the default rpc endpoint for this chain\n        const [chain] = chains;\n        const [rpc] = chain.rpcEndpoints;\n        // Ensure the appName is set properly\n        if (options && options.appName) {\n            this.appName = options.appName;\n        }\n        else {\n            throw new UALAnchorError_1.UALAnchorError('ual-anchor requires the appName property to be set on the `options` argument during initialization.', universal_authenticator_library_1.UALErrorType.Initialization, null);\n        }\n        // Allow overriding the JsonRpc client via options\n        if (options && options.rpc) {\n            this.rpc = options.rpc;\n        }\n        else {\n            // otherwise just return a generic rpc instance for this endpoint\n            this.rpc = new eosjs_1.JsonRpc(`${rpc.protocol}://${rpc.host}:${rpc.port}`);\n        }\n        // Allow passing a custom service URL to process callbacks\n        if (options.service) {\n            this.service = options.service;\n        }\n        // Allow passing of disable flag for Greymass Fuel\n        if (options && options.disableGreymassFuel) {\n            this.disableGreymassFuel = options.disableGreymassFuel;\n        }\n        // Allow passing of disable flag for resulting request status\n        if (options && options.requestStatus) {\n            this.requestStatus = options.requestStatus;\n        }\n    }\n    /**\n     * Called after `shouldRender` and should be used to handle any async actions required to initialize the authenticator\n     */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // establish anchor-link\n            this.link = new anchor_link_1.default({\n                chainId: this.chainId,\n                rpc: this.rpc,\n                service: this.service,\n                transport: new anchor_link_browser_transport_1.default({\n                    // default: disable browser transport UI status messages, ual has its own\n                    requestStatus: this.requestStatus,\n                    // default: do not disable fuel by default\n                    disableGreymassFuel: this.disableGreymassFuel,\n                }),\n            });\n            // attempt to restore any existing session for this app\n            const session = yield this.link.restoreSession(this.appName);\n            if (session) {\n                this.users = [new AnchorUser_1.AnchorUser(this.rpc, { session })];\n            }\n        });\n    }\n    /**\n     * Resets the authenticator to its initial, default state then calls `init` method\n     */\n    reset() {\n        this.users = [];\n    }\n    /**\n     * Returns true if the authenticator has errored while initializing.\n     */\n    isErrored() {\n        return false;\n    }\n    /**\n     * Returns a URL where the user can download and install the underlying authenticator\n     * if it is not found by the UAL Authenticator.\n     */\n    getOnboardingLink() {\n        return 'https://github.com/greymass/anchor/';\n    }\n    /**\n     * Returns error (if available) if the authenticator has errored while initializing.\n     */\n    getError() {\n        return null;\n    }\n    /**\n     * Returns true if the authenticator is loading while initializing its internal state.\n     */\n    isLoading() {\n        return false;\n    }\n    getName() {\n        return 'anchor';\n    }\n    /**\n     * Returns the style of the Button that will be rendered.\n     */\n    getStyle() {\n        return {\n            icon: AnchorLogo_1.AnchorLogo,\n            text: interfaces_1.Name,\n            textColor: 'white',\n            background: '#3650A2'\n        };\n    }\n    /**\n     * Returns whether or not the button should render based on the operating environment and other factors.\n     * ie. If your Authenticator App does not support mobile, it returns false when running in a mobile browser.\n     */\n    shouldRender() {\n        return !this.isLoading();\n    }\n    /**\n     * Returns whether or not the dapp should attempt to auto login with the Authenticator app.\n     * Auto login will only occur when there is only one Authenticator that returns shouldRender() true and\n     * shouldAutoLogin() true.\n     */\n    shouldAutoLogin() {\n        return this.users.length > 0;\n    }\n    /**\n     * Returns whether or not the button should show an account name input field.\n     * This is for Authenticators that do not have a concept of account names.\n     */\n    shouldRequestAccountName() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return false;\n        });\n    }\n    /**\n     * Login using the Authenticator App. This can return one or more users depending on multiple chain support.\n     *\n     * @param accountName  The account name of the user for Authenticators that do not store accounts (optional)\n     */\n    login() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.chains.length > 1) {\n                throw new UALAnchorError_1.UALAnchorError('UAL-Anchor does not yet support providing multiple chains to UAL. Please initialize the UAL provider with a single chain.', universal_authenticator_library_1.UALErrorType.Unsupported, null);\n            }\n            try {\n                // only call the login method if no users exist, to prevent UI from prompting for login during auto login\n                //  some changes to UAL are going to be required to support multiple users\n                if (this.users.length === 0) {\n                    const identity = yield this.link.login(this.appName);\n                    this.users = [new AnchorUser_1.AnchorUser(this.rpc, identity)];\n                }\n            }\n            catch (e) {\n                throw new UALAnchorError_1.UALAnchorError(e.message, universal_authenticator_library_1.UALErrorType.Login, e);\n            }\n            return this.users;\n        });\n    }\n    /**\n     * Logs the user out of the dapp. This will be strongly dependent on each Authenticator app's patterns.\n     */\n    logout() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // retrieve the current user\n            const [user] = this.users;\n            // retrieve the auth from the current user\n            const { session: { auth } } = user;\n            // remove the session from anchor-link\n            yield this.link.removeSession(this.appName, auth);\n            // reset the authenticator\n            this.reset();\n        });\n    }\n    /**\n     * Returns true if user confirmation is required for `getKeys`\n     */\n    requiresGetKeyConfirmation() {\n        return false;\n    }\n}\nexports.Anchor = Anchor;\n"]},"metadata":{},"sourceType":"script"}