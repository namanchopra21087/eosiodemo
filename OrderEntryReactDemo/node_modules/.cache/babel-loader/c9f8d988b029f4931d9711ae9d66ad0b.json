{"ast":null,"code":"import React from\"react\";import{useTable}from\"react-table\";import MaUTable from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";var Table=function Table(_ref){var columns=_ref.columns,data=_ref.data;var _useTable=useTable({columns:columns,data:data}),getTableProps=_useTable.getTableProps,getTableBodyProps=_useTable.getTableBodyProps,headerGroups=_useTable.headerGroups,rows=_useTable.rows,prepareRow=_useTable.prepareRow;return/*#__PURE__*/React.createElement(MaUTable,getTableProps(),/*#__PURE__*/React.createElement(TableHead,null,headerGroups.map(function(headerGroup){return/*#__PURE__*/React.createElement(TableRow,headerGroup.getHeaderGroupProps(),headerGroup.headers.map(function(column){return/*#__PURE__*/React.createElement(TableCell,column.getHeaderProps(),column.render(\"Header\"));}));})),/*#__PURE__*/React.createElement(TableBody,getTableBodyProps(),rows.map(function(row,i){prepareRow(row);return/*#__PURE__*/React.createElement(TableRow,row.getRowProps(),row.cells.map(function(cell){return/*#__PURE__*/React.createElement(TableCell,cell.getCellProps(),cell.render(\"Cell\"));}));})));};export default Table;","map":{"version":3,"sources":["C:/Users/naman.chopra/Git-Repo/eosiodemo/OrderEntryReactDemo/src/table.js"],"names":["React","useTable","MaUTable","TableBody","TableCell","TableHead","TableRow","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAuB,IAApBC,CAAAA,OAAoB,MAApBA,OAAoB,CAAXC,IAAW,MAAXA,IAAW,eAO7BR,QAAQ,CAAC,CACXO,OAAO,CAAPA,OADW,CAEXC,IAAI,CAAJA,IAFW,CAAD,CAPqB,CAE/BC,aAF+B,WAE/BA,aAF+B,CAG/BC,iBAH+B,WAG/BA,iBAH+B,CAI/BC,YAJ+B,WAI/BA,YAJ+B,CAK/BC,IAL+B,WAK/BA,IAL+B,CAM/BC,UAN+B,WAM/BA,UAN+B,CAYjC,mBACE,oBAAC,QAAD,CAAcJ,aAAa,EAA3B,cACE,oBAAC,SAAD,MACGE,YAAY,CAACG,GAAb,CAAiB,SAAAC,WAAW,qBAC3B,oBAAC,QAAD,CAAcA,WAAW,CAACC,mBAAZ,EAAd,CACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwB,SAAAI,MAAM,qBAC7B,oBAAC,SAAD,CAAeA,MAAM,CAACC,cAAP,EAAf,CAAyCD,MAAM,CAACE,MAAP,CAAc,QAAd,CAAzC,CAD6B,EAA9B,CADH,CAD2B,EAA5B,CADH,CADF,cAUE,oBAAC,SAAD,CAAeV,iBAAiB,EAAhC,CACGE,IAAI,CAACE,GAAL,CAAS,SAACO,GAAD,CAAMC,CAAN,CAAY,CACpBT,UAAU,CAACQ,GAAD,CAAV,CACA,mBACE,oBAAC,QAAD,CAAcA,GAAG,CAACE,WAAJ,EAAd,CACGF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAc,SAAAW,IAAI,CAAI,CACrB,mBAAO,oBAAC,SAAD,CAAeA,IAAI,CAACC,YAAL,EAAf,CAAqCD,IAAI,CAACL,MAAL,CAAY,MAAZ,CAArC,CAAP,CACD,CAFA,CADH,CADF,CAOD,CATA,CADH,CAVF,CADF,CAyBD,CArCH,CAuCE,cAAed,CAAAA,KAAf","sourcesContent":["import React from \"react\";\r\nimport { useTable } from \"react-table\";\r\nimport MaUTable from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst Table = ({ columns, data }) => {\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow\r\n    } = useTable({\r\n      columns,\r\n      data\r\n    });\r\n  \r\n    return (\r\n      <MaUTable {...getTableProps()}>\r\n        <TableHead>\r\n          {headerGroups.map(headerGroup => (\r\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <TableCell {...column.getHeaderProps()}>{column.render(\"Header\")}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableHead>\r\n        <TableBody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <TableRow {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <TableCell {...cell.getCellProps()}>{cell.render(\"Cell\")}</TableCell>;\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </MaUTable>\r\n    );\r\n  };\r\n\r\n  export default Table;\r\n"]},"metadata":{},"sourceType":"module"}