{"ast":null,"code":"// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\nvar uint_max = Math.pow(2, 32);\n\nfunction fixup_uint32(x) {\n  var ret, x_pos;\n  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x;\n  return ret;\n}\n\nfunction scrub_vec(v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0;\n  }\n\n  return false;\n}\n\nfunction Global() {\n  this.SBOX = [];\n  this.INV_SBOX = [];\n  this.SUB_MIX = [[], [], [], []];\n  this.INV_SUB_MIX = [[], [], [], []];\n  this.init();\n  this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n}\n\nGlobal.prototype.init = function () {\n  var d, i, sx, t, x, x2, x4, x8, xi, _i;\n\n  d = function () {\n    var _i, _results;\n\n    _results = [];\n\n    for (i = _i = 0; _i < 256; i = ++_i) {\n      if (i < 128) {\n        _results.push(i << 1);\n      } else {\n        _results.push(i << 1 ^ 0x11b);\n      }\n    }\n\n    return _results;\n  }();\n\n  x = 0;\n  xi = 0;\n\n  for (i = _i = 0; _i < 256; i = ++_i) {\n    sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;\n    sx = sx >>> 8 ^ sx & 0xff ^ 0x63;\n    this.SBOX[x] = sx;\n    this.INV_SBOX[sx] = x;\n    x2 = d[x];\n    x4 = d[x2];\n    x8 = d[x4];\n    t = d[sx] * 0x101 ^ sx * 0x1010100;\n    this.SUB_MIX[0][x] = t << 24 | t >>> 8;\n    this.SUB_MIX[1][x] = t << 16 | t >>> 16;\n    this.SUB_MIX[2][x] = t << 8 | t >>> 24;\n    this.SUB_MIX[3][x] = t;\n    t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    this.INV_SUB_MIX[0][sx] = t << 24 | t >>> 8;\n    this.INV_SUB_MIX[1][sx] = t << 16 | t >>> 16;\n    this.INV_SUB_MIX[2][sx] = t << 8 | t >>> 24;\n    this.INV_SUB_MIX[3][sx] = t;\n\n    if (x === 0) {\n      x = xi = 1;\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]];\n      xi ^= d[d[xi]];\n    }\n  }\n\n  return true;\n};\n\nvar G = new Global();\nAES.blockSize = 4 * 4;\nAES.prototype.blockSize = AES.blockSize;\nAES.keySize = 256 / 8;\nAES.prototype.keySize = AES.keySize;\n\nfunction bufferToArray(buf) {\n  var len = buf.length / 4;\n  var out = new Array(len);\n  var i = -1;\n\n  while (++i < len) {\n    out[i] = buf.readUInt32BE(i * 4);\n  }\n\n  return out;\n}\n\nfunction AES(key) {\n  this._key = bufferToArray(key);\n\n  this._doReset();\n}\n\nAES.prototype._doReset = function () {\n  var invKsRow, keySize, keyWords, ksRow, ksRows, t;\n  keyWords = this._key;\n  keySize = keyWords.length;\n  this._nRounds = keySize + 6;\n  ksRows = (this._nRounds + 1) * 4;\n  this._keySchedule = [];\n\n  for (ksRow = 0; ksRow < ksRows; ksRow++) {\n    this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], ksRow % keySize === 0 ? (t = t << 8 | t >>> 24, t = G.SBOX[t >>> 24] << 24 | G.SBOX[t >>> 16 & 0xff] << 16 | G.SBOX[t >>> 8 & 0xff] << 8 | G.SBOX[t & 0xff], t ^= G.RCON[ksRow / keySize | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = G.SBOX[t >>> 24] << 24 | G.SBOX[t >>> 16 & 0xff] << 16 | G.SBOX[t >>> 8 & 0xff] << 8 | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t);\n  }\n\n  this._invKeySchedule = [];\n\n  for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n    ksRow = ksRows - invKsRow;\n    t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)];\n    this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[t >>> 16 & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[t >>> 8 & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]];\n  }\n\n  return true;\n};\n\nAES.prototype.encryptBlock = function (M) {\n  M = bufferToArray(new Buffer(M));\n\n  var out = this._doCryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX);\n\n  var buf = new Buffer(16);\n  buf.writeUInt32BE(out[0], 0);\n  buf.writeUInt32BE(out[1], 4);\n  buf.writeUInt32BE(out[2], 8);\n  buf.writeUInt32BE(out[3], 12);\n  return buf;\n};\n\nAES.prototype.decryptBlock = function (M) {\n  M = bufferToArray(new Buffer(M));\n  var temp = [M[3], M[1]];\n  M[1] = temp[0];\n  M[3] = temp[1];\n\n  var out = this._doCryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX);\n\n  var buf = new Buffer(16);\n  buf.writeUInt32BE(out[0], 0);\n  buf.writeUInt32BE(out[3], 4);\n  buf.writeUInt32BE(out[2], 8);\n  buf.writeUInt32BE(out[1], 12);\n  return buf;\n};\n\nAES.prototype.scrub = function () {\n  scrub_vec(this._keySchedule);\n  scrub_vec(this._invKeySchedule);\n  scrub_vec(this._key);\n};\n\nAES.prototype._doCryptBlock = function (M, keySchedule, SUB_MIX, SBOX) {\n  var ksRow, s0, s1, s2, s3, t0, t1, t2, t3;\n  s0 = M[0] ^ keySchedule[0];\n  s1 = M[1] ^ keySchedule[1];\n  s2 = M[2] ^ keySchedule[2];\n  s3 = M[3] ^ keySchedule[3];\n  ksRow = 4;\n\n  for (var round = 1; round < this._nRounds; round++) {\n    t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][s1 >>> 16 & 0xff] ^ SUB_MIX[2][s2 >>> 8 & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++];\n    t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][s2 >>> 16 & 0xff] ^ SUB_MIX[2][s3 >>> 8 & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++];\n    t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][s3 >>> 16 & 0xff] ^ SUB_MIX[2][s0 >>> 8 & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++];\n    t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][s0 >>> 16 & 0xff] ^ SUB_MIX[2][s1 >>> 8 & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++];\n    s0 = t0;\n    s1 = t1;\n    s2 = t2;\n    s3 = t3;\n  }\n\n  t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 0xff] << 16 | SBOX[s2 >>> 8 & 0xff] << 8 | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n  t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 0xff] << 16 | SBOX[s3 >>> 8 & 0xff] << 8 | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n  t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 0xff] << 16 | SBOX[s0 >>> 8 & 0xff] << 8 | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n  t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 0xff] << 16 | SBOX[s1 >>> 8 & 0xff] << 8 | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n  return [fixup_uint32(t0), fixup_uint32(t1), fixup_uint32(t2), fixup_uint32(t3)];\n};\n\nexports.AES = AES;","map":{"version":3,"sources":["C:/Users/naman.chopra/Git-Repo/eosiodemo/OrderEntryReactDemo/node_modules/eosjs-ecc/node_modules/browserify-aes/aes.js"],"names":["uint_max","Math","pow","fixup_uint32","x","ret","x_pos","abs","scrub_vec","v","i","length","Global","SBOX","INV_SBOX","SUB_MIX","INV_SUB_MIX","init","RCON","prototype","d","sx","t","x2","x4","x8","xi","_i","_results","push","G","AES","blockSize","keySize","bufferToArray","buf","len","out","Array","readUInt32BE","key","_key","_doReset","invKsRow","keyWords","ksRow","ksRows","_nRounds","_keySchedule","_invKeySchedule","encryptBlock","M","Buffer","_doCryptBlock","writeUInt32BE","decryptBlock","temp","scrub","keySchedule","s0","s1","s2","s3","t0","t1","t2","t3","round","exports"],"mappings":"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","sourcesContent":["// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar uint_max = Math.pow(2, 32)\nfunction fixup_uint32 (x) {\n  var ret, x_pos\n  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x\n  return ret\n}\nfunction scrub_vec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n  return false\n}\n\nfunction Global () {\n  this.SBOX = []\n  this.INV_SBOX = []\n  this.SUB_MIX = [[], [], [], []]\n  this.INV_SUB_MIX = [[], [], [], []]\n  this.init()\n  this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\n}\n\nGlobal.prototype.init = function () {\n  var d, i, sx, t, x, x2, x4, x8, xi, _i\n  d = (function () {\n    var _i, _results\n    _results = []\n    for (i = _i = 0; _i < 256; i = ++_i) {\n      if (i < 128) {\n        _results.push(i << 1)\n      } else {\n        _results.push((i << 1) ^ 0x11b)\n      }\n    }\n    return _results\n  })()\n  x = 0\n  xi = 0\n  for (i = _i = 0; _i < 256; i = ++_i) {\n    sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    this.SBOX[x] = sx\n    this.INV_SBOX[sx] = x\n    x2 = d[x]\n    x4 = d[x2]\n    x8 = d[x4]\n    t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    this.SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    this.SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    this.SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    this.SUB_MIX[3][x] = t\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    this.INV_SUB_MIX[3][sx] = t\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n  return true\n}\n\nvar G = new Global()\n\nAES.blockSize = 4 * 4\n\nAES.prototype.blockSize = AES.blockSize\n\nAES.keySize = 256 / 8\n\nAES.prototype.keySize = AES.keySize\n\nfunction bufferToArray (buf) {\n  var len = buf.length / 4\n  var out = new Array(len)\n  var i = -1\n  while (++i < len) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n  return out\n}\nfunction AES (key) {\n  this._key = bufferToArray(key)\n  this._doReset()\n}\n\nAES.prototype._doReset = function () {\n  var invKsRow, keySize, keyWords, ksRow, ksRows, t\n  keyWords = this._key\n  keySize = keyWords.length\n  this._nRounds = keySize + 6\n  ksRows = (this._nRounds + 1) * 4\n  this._keySchedule = []\n  for (ksRow = 0; ksRow < ksRows; ksRow++) {\n    this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t)\n  }\n  this._invKeySchedule = []\n  for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n    ksRow = ksRows - invKsRow\n    t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)]\n    this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]]\n  }\n  return true\n}\n\nAES.prototype.encryptBlock = function (M) {\n  M = bufferToArray(new Buffer(M))\n  var out = this._doCryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = bufferToArray(new Buffer(M))\n  var temp = [M[3], M[1]]\n  M[1] = temp[0]\n  M[3] = temp[1]\n  var out = this._doCryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrub_vec(this._keySchedule)\n  scrub_vec(this._invKeySchedule)\n  scrub_vec(this._key)\n}\n\nAES.prototype._doCryptBlock = function (M, keySchedule, SUB_MIX, SBOX) {\n  var ksRow, s0, s1, s2, s3, t0, t1, t2, t3\n\n  s0 = M[0] ^ keySchedule[0]\n  s1 = M[1] ^ keySchedule[1]\n  s2 = M[2] ^ keySchedule[2]\n  s3 = M[3] ^ keySchedule[3]\n  ksRow = 4\n  for (var round = 1; round < this._nRounds; round++) {\n    t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  return [\n    fixup_uint32(t0),\n    fixup_uint32(t1),\n    fixup_uint32(t2),\n    fixup_uint32(t3)\n  ]\n}\n\nexports.AES = AES\n"]},"metadata":{},"sourceType":"script"}