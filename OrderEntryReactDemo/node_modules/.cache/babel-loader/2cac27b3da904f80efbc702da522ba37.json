{"ast":null,"code":"'use strict';\n\nvar inherits = require('inherits');\n\nvar md5 = require('./md5');\n\nvar RIPEMD160 = require('ripemd160');\n\nvar sha = require('sha.js');\n\nvar Base = require('cipher-base');\n\nfunction HashNoConstructor(hash) {\n  Base.call(this, 'digest');\n  this._hash = hash;\n  this.buffers = [];\n}\n\ninherits(HashNoConstructor, Base);\n\nHashNoConstructor.prototype._update = function (data) {\n  this.buffers.push(data);\n};\n\nHashNoConstructor.prototype._final = function () {\n  var buf = Buffer.concat(this.buffers);\n\n  var r = this._hash(buf);\n\n  this.buffers = null;\n  return r;\n};\n\nfunction Hash(hash) {\n  Base.call(this, 'digest');\n  this._hash = hash;\n}\n\ninherits(Hash, Base);\n\nHash.prototype._update = function (data) {\n  this._hash.update(data);\n};\n\nHash.prototype._final = function () {\n  return this._hash.digest();\n};\n\nmodule.exports = function createHash(alg) {\n  alg = alg.toLowerCase();\n  if (alg === 'md5') return new HashNoConstructor(md5);\n  if (alg === 'rmd160' || alg === 'ripemd160') return new Hash(new RIPEMD160());\n  return new Hash(sha(alg));\n};","map":{"version":3,"sources":["C:/Users/naman.chopra/Git-Repo/eosiodemo/OrderEntryReactDemo/node_modules/eosjs-ecc/node_modules/create-hash/browser.js"],"names":["inherits","require","md5","RIPEMD160","sha","Base","HashNoConstructor","hash","call","_hash","buffers","prototype","_update","data","push","_final","buf","Buffer","concat","r","Hash","update","digest","module","exports","createHash","alg","toLowerCase"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,QAAD,CAAjB;;AAEA,IAAII,IAAI,GAAGJ,OAAO,CAAC,aAAD,CAAlB;;AAEA,SAASK,iBAAT,CAA4BC,IAA5B,EAAkC;AAChCF,EAAAA,IAAI,CAACG,IAAL,CAAU,IAAV,EAAgB,QAAhB;AAEA,OAAKC,KAAL,GAAaF,IAAb;AACA,OAAKG,OAAL,GAAe,EAAf;AACD;;AAEDV,QAAQ,CAACM,iBAAD,EAAoBD,IAApB,CAAR;;AAEAC,iBAAiB,CAACK,SAAlB,CAA4BC,OAA5B,GAAsC,UAAUC,IAAV,EAAgB;AACpD,OAAKH,OAAL,CAAaI,IAAb,CAAkBD,IAAlB;AACD,CAFD;;AAIAP,iBAAiB,CAACK,SAAlB,CAA4BI,MAA5B,GAAqC,YAAY;AAC/C,MAAIC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKR,OAAnB,CAAV;;AACA,MAAIS,CAAC,GAAG,KAAKV,KAAL,CAAWO,GAAX,CAAR;;AACA,OAAKN,OAAL,GAAe,IAAf;AAEA,SAAOS,CAAP;AACD,CAND;;AAQA,SAASC,IAAT,CAAeb,IAAf,EAAqB;AACnBF,EAAAA,IAAI,CAACG,IAAL,CAAU,IAAV,EAAgB,QAAhB;AAEA,OAAKC,KAAL,GAAaF,IAAb;AACD;;AAEDP,QAAQ,CAACoB,IAAD,EAAOf,IAAP,CAAR;;AAEAe,IAAI,CAACT,SAAL,CAAeC,OAAf,GAAyB,UAAUC,IAAV,EAAgB;AACvC,OAAKJ,KAAL,CAAWY,MAAX,CAAkBR,IAAlB;AACD,CAFD;;AAIAO,IAAI,CAACT,SAAL,CAAeI,MAAf,GAAwB,YAAY;AAClC,SAAO,KAAKN,KAAL,CAAWa,MAAX,EAAP;AACD,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiB,SAASC,UAAT,CAAqBC,GAArB,EAA0B;AACzCA,EAAAA,GAAG,GAAGA,GAAG,CAACC,WAAJ,EAAN;AACA,MAAID,GAAG,KAAK,KAAZ,EAAmB,OAAO,IAAIpB,iBAAJ,CAAsBJ,GAAtB,CAAP;AACnB,MAAIwB,GAAG,KAAK,QAAR,IAAoBA,GAAG,KAAK,WAAhC,EAA6C,OAAO,IAAIN,IAAJ,CAAS,IAAIjB,SAAJ,EAAT,CAAP;AAE7C,SAAO,IAAIiB,IAAJ,CAAShB,GAAG,CAACsB,GAAD,CAAZ,CAAP;AACD,CAND","sourcesContent":["'use strict'\nvar inherits = require('inherits')\nvar md5 = require('./md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\n\nvar Base = require('cipher-base')\n\nfunction HashNoConstructor (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n  this.buffers = []\n}\n\ninherits(HashNoConstructor, Base)\n\nHashNoConstructor.prototype._update = function (data) {\n  this.buffers.push(data)\n}\n\nHashNoConstructor.prototype._final = function () {\n  var buf = Buffer.concat(this.buffers)\n  var r = this._hash(buf)\n  this.buffers = null\n\n  return r\n}\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new HashNoConstructor(md5)\n  if (alg === 'rmd160' || alg === 'ripemd160') return new Hash(new RIPEMD160())\n\n  return new Hash(sha(alg))\n}\n"]},"metadata":{},"sourceType":"script"}