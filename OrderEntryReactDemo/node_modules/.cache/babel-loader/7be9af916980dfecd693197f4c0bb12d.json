{"ast":null,"code":"var xor = require('buffer-xor');\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = new Buffer('');\n  var len;\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev);\n      self._prev = new Buffer('');\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length;\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)]);\n      data = data.slice(len);\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)]);\n      break;\n    }\n  }\n\n  return out;\n};\n\nfunction encryptStart(self, data, decrypt) {\n  var len = data.length;\n  var out = xor(data, self._cache);\n  self._cache = self._cache.slice(len);\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out]);\n  return out;\n}","map":{"version":3,"sources":["C:/Users/naman.chopra/Git-Repo/eosiodemo/OrderEntryReactDemo/node_modules/eosjs-ecc/node_modules/browserify-aes/modes/cfb.js"],"names":["xor","require","exports","encrypt","self","data","decrypt","out","Buffer","len","length","_cache","_cipher","encryptBlock","_prev","concat","encryptStart","slice"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,YAAD,CAAjB;;AAEAC,OAAO,CAACC,OAAR,GAAkB,UAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+B;AAC/C,MAAIC,GAAG,GAAG,IAAIC,MAAJ,CAAW,EAAX,CAAV;AACA,MAAIC,GAAJ;;AAEA,SAAOJ,IAAI,CAACK,MAAZ,EAAoB;AAClB,QAAIN,IAAI,CAACO,MAAL,CAAYD,MAAZ,KAAuB,CAA3B,EAA8B;AAC5BN,MAAAA,IAAI,CAACO,MAAL,GAAcP,IAAI,CAACQ,OAAL,CAAaC,YAAb,CAA0BT,IAAI,CAACU,KAA/B,CAAd;AACAV,MAAAA,IAAI,CAACU,KAAL,GAAa,IAAIN,MAAJ,CAAW,EAAX,CAAb;AACD;;AAED,QAAIJ,IAAI,CAACO,MAAL,CAAYD,MAAZ,IAAsBL,IAAI,CAACK,MAA/B,EAAuC;AACrCD,MAAAA,GAAG,GAAGL,IAAI,CAACO,MAAL,CAAYD,MAAlB;AACAH,MAAAA,GAAG,GAAGC,MAAM,CAACO,MAAP,CAAc,CAACR,GAAD,EAAMS,YAAY,CAACZ,IAAD,EAAOC,IAAI,CAACY,KAAL,CAAW,CAAX,EAAcR,GAAd,CAAP,EAA2BH,OAA3B,CAAlB,CAAd,CAAN;AACAD,MAAAA,IAAI,GAAGA,IAAI,CAACY,KAAL,CAAWR,GAAX,CAAP;AACD,KAJD,MAIO;AACLF,MAAAA,GAAG,GAAGC,MAAM,CAACO,MAAP,CAAc,CAACR,GAAD,EAAMS,YAAY,CAACZ,IAAD,EAAOC,IAAP,EAAaC,OAAb,CAAlB,CAAd,CAAN;AACA;AACD;AACF;;AAED,SAAOC,GAAP;AACD,CArBD;;AAsBA,SAASS,YAAT,CAAuBZ,IAAvB,EAA6BC,IAA7B,EAAmCC,OAAnC,EAA4C;AAC1C,MAAIG,GAAG,GAAGJ,IAAI,CAACK,MAAf;AACA,MAAIH,GAAG,GAAGP,GAAG,CAACK,IAAD,EAAOD,IAAI,CAACO,MAAZ,CAAb;AACAP,EAAAA,IAAI,CAACO,MAAL,GAAcP,IAAI,CAACO,MAAL,CAAYM,KAAZ,CAAkBR,GAAlB,CAAd;AACAL,EAAAA,IAAI,CAACU,KAAL,GAAaN,MAAM,CAACO,MAAP,CAAc,CAACX,IAAI,CAACU,KAAN,EAAaR,OAAO,GAAGD,IAAH,GAAUE,GAA9B,CAAd,CAAb;AACA,SAAOA,GAAP;AACD","sourcesContent":["var xor = require('buffer-xor')\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = new Buffer('')\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = new Buffer('')\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n"]},"metadata":{},"sourceType":"script"}