{"ast":null,"code":"var zeros = new Buffer(16);\nzeros.fill(0);\nmodule.exports = GHASH;\n\nfunction GHASH(key) {\n  this.h = key;\n  this.state = new Buffer(16);\n  this.state.fill(0);\n  this.cache = new Buffer('');\n} // from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho V채h채-Herttua\n\n\nGHASH.prototype.ghash = function (block) {\n  var i = -1;\n\n  while (++i < block.length) {\n    this.state[i] ^= block[i];\n  }\n\n  this._multiply();\n};\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h);\n  var Zi = [0, 0, 0, 0];\n  var j, xi, lsb_Vi;\n  var i = -1;\n\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & 1 << 7 - i % 8) !== 0;\n\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi = xor(Zi, Vi);\n    } // Store the value of LSB(V_i)\n\n\n    lsb_Vi = (Vi[3] & 1) !== 0; // V_i+1 = V_i >> 1\n\n    for (j = 3; j > 0; j--) {\n      Vi[j] = Vi[j] >>> 1 | (Vi[j - 1] & 1) << 31;\n    }\n\n    Vi[0] = Vi[0] >>> 1; // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n\n    if (lsb_Vi) {\n      Vi[0] = Vi[0] ^ 0xe1 << 24;\n    }\n  }\n\n  this.state = fromArray(Zi);\n};\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf]);\n  var chunk;\n\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16);\n    this.cache = this.cache.slice(16);\n    this.ghash(chunk);\n  }\n};\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, zeros], 16));\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]));\n  return this.state;\n};\n\nfunction toArray(buf) {\n  return [buf.readUInt32BE(0), buf.readUInt32BE(4), buf.readUInt32BE(8), buf.readUInt32BE(12)];\n}\n\nfunction fromArray(out) {\n  out = out.map(fixup_uint32);\n  var buf = new Buffer(16);\n  buf.writeUInt32BE(out[0], 0);\n  buf.writeUInt32BE(out[1], 4);\n  buf.writeUInt32BE(out[2], 8);\n  buf.writeUInt32BE(out[3], 12);\n  return buf;\n}\n\nvar uint_max = Math.pow(2, 32);\n\nfunction fixup_uint32(x) {\n  var ret, x_pos;\n  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x;\n  return ret;\n}\n\nfunction xor(a, b) {\n  return [a[0] ^ b[0], a[1] ^ b[1], a[2] ^ b[2], a[3] ^ b[3]];\n}","map":{"version":3,"sources":["C:/Users/naman.chopra/Git-Repo/eosiodemo/OrderEntryReactDemo/node_modules/eosjs-ecc/node_modules/browserify-aes/ghash.js"],"names":["zeros","Buffer","fill","module","exports","GHASH","key","h","state","cache","prototype","ghash","block","i","length","_multiply","Vi","toArray","Zi","j","xi","lsb_Vi","xor","fromArray","update","buf","concat","chunk","slice","final","abl","bl","readUInt32BE","out","map","fixup_uint32","writeUInt32BE","uint_max","Math","pow","x","ret","x_pos","abs","a","b"],"mappings":"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","sourcesContent":["var zeros = new Buffer(16)\nzeros.fill(0)\nmodule.exports = GHASH\nfunction GHASH (key) {\n  this.h = key\n  this.state = new Buffer(16)\n  this.state.fill(0)\n  this.cache = new Buffer('')\n}\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho V채h채-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsb_Vi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - i % 8))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi = xor(Zi, Vi)\n    }\n\n    // Store the value of LSB(V_i)\n    lsb_Vi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsb_Vi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, zeros], 16))\n  }\n  this.ghash(fromArray([\n    0, abl,\n    0, bl\n  ]))\n  return this.state\n}\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\nfunction fromArray (out) {\n  out = out.map(fixup_uint32)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\nvar uint_max = Math.pow(2, 32)\nfunction fixup_uint32 (x) {\n  var ret, x_pos\n  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x\n  return ret\n}\nfunction xor (a, b) {\n  return [\n    a[0] ^ b[0],\n    a[1] ^ b[1],\n    a[2] ^ b[2],\n    a[3] ^ b[3]\n  ]\n}\n"]},"metadata":{},"sourceType":"script"}