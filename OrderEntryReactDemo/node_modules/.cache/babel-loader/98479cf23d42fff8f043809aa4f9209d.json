{"ast":null,"code":"var aes = require('./aes');\n\nvar Transform = require('cipher-base');\n\nvar inherits = require('inherits');\n\nvar modes = require('./modes');\n\nvar StreamCipher = require('./streamCipher');\n\nvar AuthCipher = require('./authCipher');\n\nvar ebtk = require('evp_bytestokey');\n\ninherits(Decipher, Transform);\n\nfunction Decipher(mode, key, iv) {\n  if (!(this instanceof Decipher)) {\n    return new Decipher(mode, key, iv);\n  }\n\n  Transform.call(this);\n  this._cache = new Splitter();\n  this._last = void 0;\n  this._cipher = new aes.AES(key);\n  this._prev = new Buffer(iv.length);\n  iv.copy(this._prev);\n  this._mode = mode;\n  this._autopadding = true;\n}\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data);\n\n  var chunk;\n  var thing;\n  var out = [];\n\n  while (chunk = this._cache.get(this._autopadding)) {\n    thing = this._mode.decrypt(this, chunk);\n    out.push(thing);\n  }\n\n  return Buffer.concat(out);\n};\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush();\n\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk));\n  } else if (chunk) {\n    throw new Error('data not multiple of block length');\n  }\n};\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo;\n  return this;\n};\n\nfunction Splitter() {\n  if (!(this instanceof Splitter)) {\n    return new Splitter();\n  }\n\n  this.cache = new Buffer('');\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data]);\n};\n\nSplitter.prototype.get = function (autoPadding) {\n  var out;\n\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16);\n      this.cache = this.cache.slice(16);\n      return out;\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16);\n      this.cache = this.cache.slice(16);\n      return out;\n    }\n  }\n\n  return null;\n};\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) {\n    return this.cache;\n  }\n};\n\nfunction unpad(last) {\n  var padded = last[15];\n  var i = -1;\n\n  while (++i < padded) {\n    if (last[i + (16 - padded)] !== padded) {\n      throw new Error('unable to decrypt data');\n    }\n  }\n\n  if (padded === 16) {\n    return;\n  }\n\n  return last.slice(0, 16 - padded);\n}\n\nvar modelist = {\n  ECB: require('./modes/ecb'),\n  CBC: require('./modes/cbc'),\n  CFB: require('./modes/cfb'),\n  CFB8: require('./modes/cfb8'),\n  CFB1: require('./modes/cfb1'),\n  OFB: require('./modes/ofb'),\n  CTR: require('./modes/ctr'),\n  GCM: require('./modes/ctr')\n};\n\nfunction createDecipheriv(suite, password, iv) {\n  var config = modes[suite.toLowerCase()];\n\n  if (!config) {\n    throw new TypeError('invalid suite type');\n  }\n\n  if (typeof iv === 'string') {\n    iv = new Buffer(iv);\n  }\n\n  if (typeof password === 'string') {\n    password = new Buffer(password);\n  }\n\n  if (password.length !== config.key / 8) {\n    throw new TypeError('invalid key length ' + password.length);\n  }\n\n  if (iv.length !== config.iv) {\n    throw new TypeError('invalid iv length ' + iv.length);\n  }\n\n  if (config.type === 'stream') {\n    return new StreamCipher(modelist[config.mode], password, iv, true);\n  } else if (config.type === 'auth') {\n    return new AuthCipher(modelist[config.mode], password, iv, true);\n  }\n\n  return new Decipher(modelist[config.mode], password, iv);\n}\n\nfunction createDecipher(suite, password) {\n  var config = modes[suite.toLowerCase()];\n\n  if (!config) {\n    throw new TypeError('invalid suite type');\n  }\n\n  var keys = ebtk(password, false, config.key, config.iv);\n  return createDecipheriv(suite, keys.key, keys.iv);\n}\n\nexports.createDecipher = createDecipher;\nexports.createDecipheriv = createDecipheriv;","map":{"version":3,"sources":["C:/Users/naman.chopra/Git-Repo/eosiodemo/OrderEntryReactDemo/node_modules/eosjs-ecc/node_modules/browserify-aes/decrypter.js"],"names":["aes","require","Transform","inherits","modes","StreamCipher","AuthCipher","ebtk","Decipher","mode","key","iv","call","_cache","Splitter","_last","_cipher","AES","_prev","Buffer","length","copy","_mode","_autopadding","prototype","_update","data","add","chunk","thing","out","get","decrypt","push","concat","_final","flush","unpad","Error","setAutoPadding","setTo","cache","autoPadding","slice","last","padded","i","modelist","ECB","CBC","CFB","CFB8","CFB1","OFB","CTR","GCM","createDecipheriv","suite","password","config","toLowerCase","TypeError","type","createDecipher","keys","exports"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,OAAD,CAAjB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAII,YAAY,GAAGJ,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIK,UAAU,GAAGL,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIM,IAAI,GAAGN,OAAO,CAAC,gBAAD,CAAlB;;AAEAE,QAAQ,CAACK,QAAD,EAAWN,SAAX,CAAR;;AACA,SAASM,QAAT,CAAmBC,IAAnB,EAAyBC,GAAzB,EAA8BC,EAA9B,EAAkC;AAChC,MAAI,EAAE,gBAAgBH,QAAlB,CAAJ,EAAiC;AAC/B,WAAO,IAAIA,QAAJ,CAAaC,IAAb,EAAmBC,GAAnB,EAAwBC,EAAxB,CAAP;AACD;;AACDT,EAAAA,SAAS,CAACU,IAAV,CAAe,IAAf;AACA,OAAKC,MAAL,GAAc,IAAIC,QAAJ,EAAd;AACA,OAAKC,KAAL,GAAa,KAAK,CAAlB;AACA,OAAKC,OAAL,GAAe,IAAIhB,GAAG,CAACiB,GAAR,CAAYP,GAAZ,CAAf;AACA,OAAKQ,KAAL,GAAa,IAAIC,MAAJ,CAAWR,EAAE,CAACS,MAAd,CAAb;AACAT,EAAAA,EAAE,CAACU,IAAH,CAAQ,KAAKH,KAAb;AACA,OAAKI,KAAL,GAAab,IAAb;AACA,OAAKc,YAAL,GAAoB,IAApB;AACD;;AACDf,QAAQ,CAACgB,SAAT,CAAmBC,OAAnB,GAA6B,UAAUC,IAAV,EAAgB;AAC3C,OAAKb,MAAL,CAAYc,GAAZ,CAAgBD,IAAhB;;AACA,MAAIE,KAAJ;AACA,MAAIC,KAAJ;AACA,MAAIC,GAAG,GAAG,EAAV;;AACA,SAAQF,KAAK,GAAG,KAAKf,MAAL,CAAYkB,GAAZ,CAAgB,KAAKR,YAArB,CAAhB,EAAqD;AACnDM,IAAAA,KAAK,GAAG,KAAKP,KAAL,CAAWU,OAAX,CAAmB,IAAnB,EAAyBJ,KAAzB,CAAR;AACAE,IAAAA,GAAG,CAACG,IAAJ,CAASJ,KAAT;AACD;;AACD,SAAOV,MAAM,CAACe,MAAP,CAAcJ,GAAd,CAAP;AACD,CAVD;;AAWAtB,QAAQ,CAACgB,SAAT,CAAmBW,MAAnB,GAA4B,YAAY;AACtC,MAAIP,KAAK,GAAG,KAAKf,MAAL,CAAYuB,KAAZ,EAAZ;;AACA,MAAI,KAAKb,YAAT,EAAuB;AACrB,WAAOc,KAAK,CAAC,KAAKf,KAAL,CAAWU,OAAX,CAAmB,IAAnB,EAAyBJ,KAAzB,CAAD,CAAZ;AACD,GAFD,MAEO,IAAIA,KAAJ,EAAW;AAChB,UAAM,IAAIU,KAAJ,CAAU,mCAAV,CAAN;AACD;AACF,CAPD;;AAQA9B,QAAQ,CAACgB,SAAT,CAAmBe,cAAnB,GAAoC,UAAUC,KAAV,EAAiB;AACnD,OAAKjB,YAAL,GAAoB,CAAC,CAACiB,KAAtB;AACA,SAAO,IAAP;AACD,CAHD;;AAIA,SAAS1B,QAAT,GAAqB;AACnB,MAAI,EAAE,gBAAgBA,QAAlB,CAAJ,EAAiC;AAC/B,WAAO,IAAIA,QAAJ,EAAP;AACD;;AACD,OAAK2B,KAAL,GAAa,IAAItB,MAAJ,CAAW,EAAX,CAAb;AACD;;AACDL,QAAQ,CAACU,SAAT,CAAmBG,GAAnB,GAAyB,UAAUD,IAAV,EAAgB;AACvC,OAAKe,KAAL,GAAatB,MAAM,CAACe,MAAP,CAAc,CAAC,KAAKO,KAAN,EAAaf,IAAb,CAAd,CAAb;AACD,CAFD;;AAIAZ,QAAQ,CAACU,SAAT,CAAmBO,GAAnB,GAAyB,UAAUW,WAAV,EAAuB;AAC9C,MAAIZ,GAAJ;;AACA,MAAIY,WAAJ,EAAiB;AACf,QAAI,KAAKD,KAAL,CAAWrB,MAAX,GAAoB,EAAxB,EAA4B;AAC1BU,MAAAA,GAAG,GAAG,KAAKW,KAAL,CAAWE,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAAN;AACA,WAAKF,KAAL,GAAa,KAAKA,KAAL,CAAWE,KAAX,CAAiB,EAAjB,CAAb;AACA,aAAOb,GAAP;AACD;AACF,GAND,MAMO;AACL,QAAI,KAAKW,KAAL,CAAWrB,MAAX,IAAqB,EAAzB,EAA6B;AAC3BU,MAAAA,GAAG,GAAG,KAAKW,KAAL,CAAWE,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAAN;AACA,WAAKF,KAAL,GAAa,KAAKA,KAAL,CAAWE,KAAX,CAAiB,EAAjB,CAAb;AACA,aAAOb,GAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAhBD;;AAiBAhB,QAAQ,CAACU,SAAT,CAAmBY,KAAnB,GAA2B,YAAY;AACrC,MAAI,KAAKK,KAAL,CAAWrB,MAAf,EAAuB;AACrB,WAAO,KAAKqB,KAAZ;AACD;AACF,CAJD;;AAKA,SAASJ,KAAT,CAAgBO,IAAhB,EAAsB;AACpB,MAAIC,MAAM,GAAGD,IAAI,CAAC,EAAD,CAAjB;AACA,MAAIE,CAAC,GAAG,CAAC,CAAT;;AACA,SAAO,EAAEA,CAAF,GAAMD,MAAb,EAAqB;AACnB,QAAID,IAAI,CAAEE,CAAC,IAAI,KAAKD,MAAT,CAAH,CAAJ,KAA8BA,MAAlC,EAA0C;AACxC,YAAM,IAAIP,KAAJ,CAAU,wBAAV,CAAN;AACD;AACF;;AACD,MAAIO,MAAM,KAAK,EAAf,EAAmB;AACjB;AACD;;AACD,SAAOD,IAAI,CAACD,KAAL,CAAW,CAAX,EAAc,KAAKE,MAAnB,CAAP;AACD;;AAED,IAAIE,QAAQ,GAAG;AACbC,EAAAA,GAAG,EAAE/C,OAAO,CAAC,aAAD,CADC;AAEbgD,EAAAA,GAAG,EAAEhD,OAAO,CAAC,aAAD,CAFC;AAGbiD,EAAAA,GAAG,EAAEjD,OAAO,CAAC,aAAD,CAHC;AAIbkD,EAAAA,IAAI,EAAElD,OAAO,CAAC,cAAD,CAJA;AAKbmD,EAAAA,IAAI,EAAEnD,OAAO,CAAC,cAAD,CALA;AAMboD,EAAAA,GAAG,EAAEpD,OAAO,CAAC,aAAD,CANC;AAObqD,EAAAA,GAAG,EAAErD,OAAO,CAAC,aAAD,CAPC;AAQbsD,EAAAA,GAAG,EAAEtD,OAAO,CAAC,aAAD;AARC,CAAf;;AAWA,SAASuD,gBAAT,CAA2BC,KAA3B,EAAkCC,QAAlC,EAA4C/C,EAA5C,EAAgD;AAC9C,MAAIgD,MAAM,GAAGvD,KAAK,CAACqD,KAAK,CAACG,WAAN,EAAD,CAAlB;;AACA,MAAI,CAACD,MAAL,EAAa;AACX,UAAM,IAAIE,SAAJ,CAAc,oBAAd,CAAN;AACD;;AACD,MAAI,OAAOlD,EAAP,KAAc,QAAlB,EAA4B;AAC1BA,IAAAA,EAAE,GAAG,IAAIQ,MAAJ,CAAWR,EAAX,CAAL;AACD;;AACD,MAAI,OAAO+C,QAAP,KAAoB,QAAxB,EAAkC;AAChCA,IAAAA,QAAQ,GAAG,IAAIvC,MAAJ,CAAWuC,QAAX,CAAX;AACD;;AACD,MAAIA,QAAQ,CAACtC,MAAT,KAAoBuC,MAAM,CAACjD,GAAP,GAAa,CAArC,EAAwC;AACtC,UAAM,IAAImD,SAAJ,CAAc,wBAAwBH,QAAQ,CAACtC,MAA/C,CAAN;AACD;;AACD,MAAIT,EAAE,CAACS,MAAH,KAAcuC,MAAM,CAAChD,EAAzB,EAA6B;AAC3B,UAAM,IAAIkD,SAAJ,CAAc,uBAAuBlD,EAAE,CAACS,MAAxC,CAAN;AACD;;AACD,MAAIuC,MAAM,CAACG,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO,IAAIzD,YAAJ,CAAiB0C,QAAQ,CAACY,MAAM,CAAClD,IAAR,CAAzB,EAAwCiD,QAAxC,EAAkD/C,EAAlD,EAAsD,IAAtD,CAAP;AACD,GAFD,MAEO,IAAIgD,MAAM,CAACG,IAAP,KAAgB,MAApB,EAA4B;AACjC,WAAO,IAAIxD,UAAJ,CAAeyC,QAAQ,CAACY,MAAM,CAAClD,IAAR,CAAvB,EAAsCiD,QAAtC,EAAgD/C,EAAhD,EAAoD,IAApD,CAAP;AACD;;AACD,SAAO,IAAIH,QAAJ,CAAauC,QAAQ,CAACY,MAAM,CAAClD,IAAR,CAArB,EAAoCiD,QAApC,EAA8C/C,EAA9C,CAAP;AACD;;AAED,SAASoD,cAAT,CAAyBN,KAAzB,EAAgCC,QAAhC,EAA0C;AACxC,MAAIC,MAAM,GAAGvD,KAAK,CAACqD,KAAK,CAACG,WAAN,EAAD,CAAlB;;AACA,MAAI,CAACD,MAAL,EAAa;AACX,UAAM,IAAIE,SAAJ,CAAc,oBAAd,CAAN;AACD;;AACD,MAAIG,IAAI,GAAGzD,IAAI,CAACmD,QAAD,EAAW,KAAX,EAAkBC,MAAM,CAACjD,GAAzB,EAA8BiD,MAAM,CAAChD,EAArC,CAAf;AACA,SAAO6C,gBAAgB,CAACC,KAAD,EAAQO,IAAI,CAACtD,GAAb,EAAkBsD,IAAI,CAACrD,EAAvB,CAAvB;AACD;;AACDsD,OAAO,CAACF,cAAR,GAAyBA,cAAzB;AACAE,OAAO,CAACT,gBAAR,GAA2BA,gBAA3B","sourcesContent":["var aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar modes = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar AuthCipher = require('./authCipher')\nvar ebtk = require('evp_bytestokey')\n\ninherits(Decipher, Transform)\nfunction Decipher (mode, key, iv) {\n  if (!(this instanceof Decipher)) {\n    return new Decipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  iv.copy(this._prev)\n  this._mode = mode\n  this._autopadding = true\n}\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\nfunction Splitter () {\n  if (!(this instanceof Splitter)) {\n    return new Splitter()\n  }\n  this.cache = new Buffer('')\n}\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n  return null\n}\nSplitter.prototype.flush = function () {\n  if (this.cache.length) {\n    return this.cache\n  }\n}\nfunction unpad (last) {\n  var padded = last[15]\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) {\n    return\n  }\n  return last.slice(0, 16 - padded)\n}\n\nvar modelist = {\n  ECB: require('./modes/ecb'),\n  CBC: require('./modes/cbc'),\n  CFB: require('./modes/cfb'),\n  CFB8: require('./modes/cfb8'),\n  CFB1: require('./modes/cfb1'),\n  OFB: require('./modes/ofb'),\n  CTR: require('./modes/ctr'),\n  GCM: require('./modes/ctr')\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  if (typeof iv === 'string') {\n    iv = new Buffer(iv)\n  }\n  if (typeof password === 'string') {\n    password = new Buffer(password)\n  }\n  if (password.length !== config.key / 8) {\n    throw new TypeError('invalid key length ' + password.length)\n  }\n  if (iv.length !== config.iv) {\n    throw new TypeError('invalid iv length ' + iv.length)\n  }\n  if (config.type === 'stream') {\n    return new StreamCipher(modelist[config.mode], password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(modelist[config.mode], password, iv, true)\n  }\n  return new Decipher(modelist[config.mode], password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n"]},"metadata":{},"sourceType":"script"}