{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naman.chopra\\\\Git-Repo\\\\eosiodemo\\\\OrderEntryReactDemo\\\\src\\\\table.js\";\nimport React from \"react\";\nimport { useTable } from \"react-table\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst Table = ({\n  columns,\n  data\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/React.createElement(MaUTable, Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(TableRow, Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(TableCell, Object.assign({}, column.getHeaderProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), column.render(\"Header\")))))), /*#__PURE__*/React.createElement(TableBody, Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(TableRow, Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(TableCell, Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 26\n        }\n      }), cell.render(\"Cell\"));\n    }));\n  })));\n};\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/naman.chopra/Git-Repo/eosiodemo/OrderEntryReactDemo/src/table.js"],"names":["React","useTable","MaUTable","TableBody","TableCell","TableHead","TableRow","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AACjC,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFb,QAAQ,CAAC;AACXO,IAAAA,OADW;AAEXC,IAAAA;AAFW,GAAD,CANZ;AAWA,sBACE,oBAAC,QAAD,oBAAcC,aAAa,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,YAAY,CAACG,GAAb,CAAiBC,WAAW,iBAC3B,oBAAC,QAAD,oBAAcA,WAAW,CAACC,mBAAZ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC7B,oBAAC,SAAD,oBAAeA,MAAM,CAACC,cAAP,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAyCD,MAAM,CAACE,MAAP,CAAc,QAAd,CAAzC,CADD,CADH,CADD,CADH,CADF,eAUE,oBAAC,SAAD,oBAAeV,iBAAiB,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGE,IAAI,CAACE,GAAL,CAAS,CAACO,GAAD,EAAMC,CAAN,KAAY;AACpBT,IAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,wBACE,oBAAC,QAAD,oBAAcA,GAAG,CAACE,WAAJ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAcW,IAAI,IAAI;AACrB,0BAAO,oBAAC,SAAD,oBAAeA,IAAI,CAACC,YAAL,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAqCD,IAAI,CAACL,MAAL,CAAY,MAAZ,CAArC,CAAP;AACD,KAFA,CADH,CADF;AAOD,GATA,CADH,CAVF,CADF;AAyBD,CArCH;;AAuCE,eAAed,KAAf","sourcesContent":["import React from \"react\";\r\nimport { useTable } from \"react-table\";\r\nimport MaUTable from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst Table = ({ columns, data }) => {\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow\r\n    } = useTable({\r\n      columns,\r\n      data\r\n    });\r\n  \r\n    return (\r\n      <MaUTable {...getTableProps()}>\r\n        <TableHead>\r\n          {headerGroups.map(headerGroup => (\r\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <TableCell {...column.getHeaderProps()}>{column.render(\"Header\")}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableHead>\r\n        <TableBody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <TableRow {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <TableCell {...cell.getCellProps()}>{cell.render(\"Cell\")}</TableCell>;\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </MaUTable>\r\n    );\r\n  };\r\n\r\n  export default Table;\r\n"]},"metadata":{},"sourceType":"module"}